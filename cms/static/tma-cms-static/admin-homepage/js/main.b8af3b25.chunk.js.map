{"version":3,"sources":["component.js","sidebar.js","app.js","index.js"],"names":["component","props","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","idOfTullet","highlightHelper","keyId","handleClose","react_default","a","createElement","className","title","Card","CardContent","hasText","TextField","fullWidth","keyid","onChange","e","handleChangeInput","onFocus","document","getElementsByClassName","style","backgroundColor","onBlur","label","value","static_double","text","indexOf","image","InputProps","endAdornment","InputAdornment","position","IconButton","edge","aria-label","onClick","Visibility_default","size","Modal","aria-labelledby","aria-describedby","onClose","Grid","container","spacing","direction","alignItems","justify","minHeight","maxHeight","overflow","item","sm","xs","src","alt","Fab","color","Close_default","link","Checkbox","checked","target_blank","handleTargetBlank","inputProps","double","single","map","field","index","key","parseInt","Sidebar","_this","this","id","Paper","getElementsByTagName","focus","hasValidated","Button","variant","handleSubmit","location","reload","Component","FrontPage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","handleCancel","handleChangeLang","hightlight","state","lang","static_double_top","i","type","temp","target","setState","toConsumableArray","parentNode","classList","includes","prevState","assign","attributes","objectToReturn","data","jsonCode","updateHomepageData","_this2","fetch","window","siteID","credentials","method","body","JSON","stringify","headers","Accept","Content-Type","X-CSRFToken","csrf","then","response","json","objectSpread","event","newValue","language","oldData","newData","_this3","property","filter","word","getElementById","prevProps","snapshot","length","_","isEqual","omit","display","Tabs","indicatorColor","textColor","Tab","sidebar_Sidebar","handleInputLang","theme","createMuiTheme","palette","primary","main","secondary","orange","background","App","fetchHomepageData","isLoaded","fetchedData","Link","href","app","ReactDOM","render","ThemeProvider","CssBaseline","src_App"],"mappings":"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","file":"static/js/main.b8af3b25.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Visibility from '@material-ui/icons/Visibility'\nimport Close from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Modal from '@material-ui/core/Modal';\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nfunction InputMultipleTest(props){\n    //Affichage des différents champs par nombre d'élèments dans le tableau des données \"Single\"\n    return (\n        <div className=\"tuilesSimple contentManage\">\n            <h2>Tuiles simples</h2>\n            <Card  className=\"card\">\n                <CardContent className=\"inputLilTuile\">\n                {\n                props.single.map((field, index) => {\n                    return (\n                        <TextField \n                            className=\"fieldSingle\" key={index} fullWidth\n                            onChange={(e) => { props.handleChangeInput(e, index)}}\n                            label={\"Course_id: \" + parseInt(index + 1)}\n                            onFocus={()=>{document.getElementsByClassName('simpleTulletIcon')[index].style.backgroundColor = \"rgb(92, 183, 216)\"}}\n                            onBlur={(e)=>{document.getElementsByClassName('simpleTulletIcon')[index].style.backgroundColor = \"\"}} \n                            value={field}>\n                        </TextField>\n                    )\n                })\n                }\n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n\nfunction InputStaticDouble(props) {\n    //Gestion de l'affichage \"preview\" dans une popin\n    const [open, setOpen] = React.useState(false);\n    let idOfTullet = 'tuileDoubleRebondOri'; \n    let highlightHelper = 'doubleRebondTulletIcon'; \n    let keyId = props.keyId;\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n    //Affichage des deux champs : Image - Link\n    if (props.keyId){\n        idOfTullet = 'tuileDoubleRebond' + props.keyId\n        highlightHelper = 'doubleRebondTulletIcon' + props.keyId; \n    }else{\n        keyId = 'original'\n    }\n        return (\n            <div className=\"tuileDoubleRebond contentManage\">\n                <h2>{props.title}</h2>\n                <Card>\n                    <CardContent>\n                        {props.hasText &&\n                            <TextField \n                                fullWidth\n                                className={idOfTullet + ' fieldTuileDoubleRebond'}\n                                keyid={props.keyId}\n                                onChange={(e) => {\n                                        props.handleChangeInput(e, false, \"text\")\n                                    }} onFocus={() => {\n                                        document.getElementsByClassName(highlightHelper)[0].style.backgroundColor = \"rgb(92, 183, 216)\"\n                                    }} onBlur={(e) => {\n                                        document.getElementsByClassName(highlightHelper)[0].style.backgroundColor = \"\"\n                                    }\n                                    }\n                                label=\"Text\"\n                                value={props.static_double ? props.static_double.text : \"\"}\n                            ></TextField>\n                        }\n\n                        <TextField \n                            fullWidth\n                            className={idOfTullet + ' fieldTuileDoubleRebond'}\n                            keyid={props.keyId}\n                            onChange={(e) => {\n                                    props.handleChangeInput(e, false, \"image\")\n                                }} onFocus={() => {\n                                    document.getElementsByClassName(highlightHelper)[0].style.backgroundColor = \"rgb(92, 183, 216)\"\n                                }} onBlur={(e) => {\n                                    document.getElementsByClassName(highlightHelper)[0].style.backgroundColor = \"\"\n                                }\n                            }\n                            label={(props.title.indexOf('Top') > -1) ? \"Image 600*318px\" : \"Image 621*397px\"}\n                            value={props.static_double ? props.static_double.image : \"\"}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment  position=\"end\">\n                                        <IconButton\n                                            edge=\"end\"\n                                            aria-label=\"Toggle Image\"\n                                            onClick={handleOpen}\n                                        >\n                                            <Visibility size=\"small\" />\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}  \n                        ></TextField>\n                        <Modal\n                            aria-labelledby=\"simple-modal-title\"\n                            aria-describedby=\"simple-modal-description\"\n                            open={open}\n                            onClose={handleClose}\n                        >\n                            <Grid\n                                container\n                                spacing={0}\n                                direction=\"row\"\n                                alignItems=\"center\"\n                                justify=\"center\"\n                                style={{ minHeight: '100vh', maxHeight: '100%',overflow : 'auto' }}\n                        >\n                                <Grid className=\"displayPreviewImage\" item sm={9} xs={10}>\n                                    <img src={props.static_double ? props.static_double.image : ''} alt={props.static_double ? props.static_double.image : \"\"} />\n                                    <div className='closeButton'>\n                                        <Fab color='secondary' onClick={handleClose} size=\"small\" className='fabWrapperCloseButton'>\n                                            <Close  className=\"closeColor\"/>    \n                                        </Fab>\n                                    </div>\n                                </Grid>\n                               \n                            </Grid> \n                        </Modal>\n\n                        <TextField\n                            fullWidth\n                            className={idOfTullet + ' fieldTuileDoubleRebond'}\n                            keyid={props.keyId}\n                            onChange={(e) => {\n                                    props.handleChangeInput(e, false, \"link\")\n                                }} onFocus={() => {\n                                    document.getElementsByClassName(highlightHelper)[0].style.backgroundColor = \"rgb(92, 183, 216)\"\n                                }} onBlur={(e) => {\n                                    document.getElementsByClassName(highlightHelper)[0].style.backgroundColor = \"\"\n                                }\n                                }\n                            label=\"Lien\"\n                            onClick={handleClose}\n                            value={props.static_double ? props.static_double.link : ''}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <Checkbox\n                                            checked={props.static_double ? props.static_double.target_blank : ''}\n                                            onChange={() => { props.handleTargetBlank(keyId) }}\n                                            value=\"target_blank\"\n                                            inputProps={{\n                                                'aria-label': 'primary checkbox',\n                                            }}\n                                        />\n\n                                    </InputAdornment>\n                                ),\n                        }}\n                        ></TextField>\n\n                    </CardContent>\n                </Card>\n            </div>\n        )\n}\n\nfunction InputDouble(props){\n    //Affichage du champ\n    return (\n        <div className=\"tuileDouble contentManage\">\n            <h2>Tuile double</h2>\n            <Card>\n                <CardContent>\n                    <TextField className=\"fieldTuileDouble\" fullWidth onChange={(e) => {\n                        props.handleChangeInput(e)\n                    }} onFocus={() => {\n                        document.getElementsByClassName('doublesimpleTulletIcon')[0].style.backgroundColor = \"rgb(92, 183, 216)\"\n                    }} onBlur={(e) => {\n                        document.getElementsByClassName('doublesimpleTulletIcon')[0].style.backgroundColor = \"\"\n                    }\n                        } label=\"Course_id: 9\" value={props.double ? props.double : \"\"}></TextField>\n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n\n\nexport default {\n    StaticDouble: InputStaticDouble,\n    InputDouble: InputDouble,\n    InputMultipleTest: InputMultipleTest\n}","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\n\n/**\n * Composant Sidebar\n * Affichage d'une petite section sur le coté lié au différent champs, hightlight lors d'un focus et permet de cliquer pour rejoindre directement  un champs\n * Affichage des boutons \"VALIDER\" et \"ANNULER\"\n */\nexport default class Sidebar extends React.Component {\n    render() {\n        return (\n            <Card id=\"cardSidebar\">\n                <CardContent  >\n                    \n                    <Grid className=\"sidebarTulletWrapper\" container direction=\"row\" justify=\"space-between\" alignItems=\"stretch\">\n                        <Grid item xs={4}>\n                            <Paper className=\" doubleRebondTulletIcon1 sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('tuileDoubleRebond1')[0].getElementsByTagName('input')[0].focus()\n                            }}>Tuile Top 1</Paper>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Paper className=\"doubleRebondTulletIcon2 sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('tuileDoubleRebond2')[0].getElementsByTagName('input')[0].focus()\n                            }}>Tuile Top 2</Paper>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Paper className=\"doubleRebondTulletIcon3 sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('tuileDoubleRebond3')[0].getElementsByTagName('input')[0].focus()\n                            }}>Tuile Top 3</Paper>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Paper className=\"simpleTulletIcon sidebarTullet noselect\" onClick={(e)=>{\n                                document.getElementsByClassName('fieldSingle')[0].getElementsByTagName('input')[0].focus()\n                            }}>Tuile 1</Paper>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Paper className=\"simpleTulletIcon sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('fieldSingle')[1].getElementsByTagName('input')[0].focus()\n                            }} >Tuile 2</Paper>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Paper className=\"doubleRebondTulletIcon sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('tuileDoubleRebondOri')[0].getElementsByTagName('input')[0].focus()\n                            }}>Double rebond</Paper>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Paper className=\"simpleTulletIcon sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('fieldSingle')[2].getElementsByTagName('input')[0].focus()\n                            }} >Tuile  3</Paper>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Paper className=\"simpleTulletIcon sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('fieldSingle')[3].getElementsByTagName('input')[0].focus()\n                            }} >Tuile 4</Paper>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Paper className=\"doublesimpleTulletIcon sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('fieldTuileDouble')[0].getElementsByTagName('input')[0].focus()\n                            }}>Double</Paper>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Paper className=\"simpleTulletIcon sidebarTullet noselect\"  onClick={(e) => {\n                                document.getElementsByClassName('fieldSingle')[4].getElementsByTagName('input')[0].focus()\n                            }} >Tuile 5</Paper>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Paper className=\"simpleTulletIcon sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('fieldSingle')[5].getElementsByTagName('input')[0].focus()\n                            }} >Tuile 6</Paper>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Paper className=\"simpleTulletIcon sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('fieldSingle')[6].getElementsByTagName('input')[0].focus()\n                            }} >Tuile 7</Paper>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Paper className=\"simpleTulletIcon sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('fieldSingle')[7].getElementsByTagName('input')[0].focus()\n                            }} >Tuile 8</Paper>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <div id=\"buttonWrapper\">\n                    <p id='warningChange'>Modifications in progress.</p>\n                    {!this.props.hasValidated &&\n                        <Button\n                            className=\"submitJson\"\n                            color=\"primary\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            onClick={(e) => {\n                                this.props.handleSubmit(e)\n                            }} \n                        >Submit\n                        </Button>\n                    }\n                    <div id=\"cancel\">\n                        <Button \n                            className=\"reinitJson\"\n                            color=\"secondary\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            onClick={(e) => {\n                                //this.props.handleCancel(this.props.handleInputLang)\n                                document.location.reload();\n                            }} >Cancel</Button>\n                    </div>\n                </div>\n            </Card>\n        )\n    }\n}\n\n\n","import React from 'react';\nimport Component from './component.js';\nimport Sidebar from './sidebar.js';\nimport _ from 'lodash';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { ThemeProvider } from '@material-ui/styles';\n/**\n * Main App, Gestion de la logique des entrées et sorties utilisateurs\n */\n\nclass FrontPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChangeInput = this.handleChangeInput.bind(this)\n        this.handleCancel = this.handleCancel.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChangeLang = this.handleChangeLang.bind(this)\n        this.hightlight = this.hightlight.bind(this)\n        this.handleTargetBlank = this.handleTargetBlank.bind(this)\n        this.state = {\n            lang: 'fr',\n            static_double_top: [],\n            single: [],\n            double: '',\n            static_double: {},\n            hasValidated: false\n        }\n    }\n    /**\n     * Gestion des entrés dans les champs\n     * @param {element cible, objet HTML e.target lors d'un event 'change'} e \n     * @param {*Gestion de l'index des tuiles simples} i \n     * @param {*Définition du type (image ou link) pour les champs tuiles doubles} type \n     */\n    handleChangeInput(e, i, type) {\n        if (i || i === 0) {\n            let temp = this.state.single\n            temp[i] = e.target.value;\n            this.setState({ single: temp })\n\n        } else if (type) {\n            let temp = [...e.target.parentNode.parentNode.classList];\n            if (temp.includes('tuileDoubleRebondOri')){\n                let static_double = this.state.static_double\n                let value = e.target.value;\n                this.setState(prevState => {\n                    Object.assign({}, prevState.static_double);\n                    static_double[type] = value;\n                    return { static_double }\n                })\n            }else{\n                let temp = [...e.target.parentNode.parentNode.attributes][1].value;\n                let value = e.target.value;\n                let static_double_top = this.state.static_double_top\n                this.setState(prevState => {\n                    Object.assign(static_double_top, prevState.static_double_top)\n                    static_double_top[parseInt(temp) - 1][type] = value;\n                    return { static_double_top}\n                })\n            }\n        } else {\n            this.setState({ double: e.target.value })\n        }\n    }\n    /**\n     * Gestion de l'envoie de données selon un format bien précis et le state du composant App\n     * Pour le moment juste un log dans la console\n     */\n    handleSubmit(){\n        let objectToReturn = this.props.data;\n        let jsonCode = {\n            static_double_top:[\n                {\n                    text: this.state.static_double_top[0].text,\n                    image: this.state.static_double_top[0].image,\n                    link: this.state.static_double_top[0].link,\n                    target_blank: this.state.static_double_top[0].target_blank\n                },{\n                    text: this.state.static_double_top[1].text,\n                    image: this.state.static_double_top[1].image,\n                    link: this.state.static_double_top[1].link,\n                    target_blank: this.state.static_double_top[1].target_blank\n                },{\n                    text: this.state.static_double_top[2].text,\n                    image: this.state.static_double_top[2].image,\n                    link: this.state.static_double_top[2].link,\n                    target_blank: this.state.static_double_top[2].target_blank\n                }\n            ],\n            single: this.state.single,\n            double: this.state.double,\n            static_double: {\n                image: this.state.static_double.image,\n                link: this.state.static_double.link,\n                target_blank: this.state.static_double.target_blank\n            }   \n        }\n\n        objectToReturn[this.state.lang] = jsonCode;\n\n        this.updateHomepageData(objectToReturn)\n    }\n\n    updateHomepageData(data) {\n        fetch('/tma_cms_apps/api/v1/microsite_manager/'+ window.props.siteID + '/homepage/', \n            { \n                credentials: \"same-origin\",\n                method: \"PUT\",\n                body: JSON.stringify(data),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': window.csrf\n                }\n            }\n        )\n        .then(response => response.json())\n        .then((json) => {\n            this.setState({ hasValidated: true });\n            document.location.reload()\n        }); \n    }\n\n    /**\n     * Gestion de l'annulation d'un champ en récuperant les information à travers les props\n     */\n    handleCancel() {\n        this.setState({\n            static_double_top: [\n                { ...this.props.data[this.state.lang].static_double_top[0] },\n                { ...this.props.data[this.state.lang].static_double_top[1] },\n                { ...this.props.data[this.state.lang].static_double_top[2] }\n            ],\n            single: [...this.props.data[this.state.lang].single],\n            double: this.props.data[this.state.lang].double,\n            static_double: { ...this.props.data[this.state.lang].static_double }\n        })\n    }\n\n    handleChangeLang(event,newValue) {\n        let language = '';\n        if (newValue === 'en') {\n            language = 'en'\n        } else if (newValue === 'fr') {\n            language = 'fr'\n        } else {\n            return\n        }\n        this.setState({\n            lang: language,\n            static_double_top: [\n                { ...this.props.data[language].static_double_top[0] },\n                { ...this.props.data[language].static_double_top[1] },\n                { ...this.props.data[language].static_double_top[2] }\n            ],\n            single: [...this.props.data[language].single],\n            double: this.props.data[language].double,\n            static_double: { ...this.props.data[language].static_double }\n        })\n    }\n\n    handleTargetBlank(keyId){\n        if (keyId === \"original\") {\n            let static_double = this.state.static_double\n            this.setState(prevState => {\n                Object.assign({}, prevState.static_double);\n                if (prevState.static_double.target_blank) {\n                    static_double.target_blank = false;\n                } else {\n                    static_double.target_blank = true;\n                }\n                return { static_double }\n            })\n        }else{\n            \n            let static_double_top = this.state.static_double_top\n            this.setState(prevState => {\n                Object.assign({}, prevState.static_double_top[keyId - 1]);\n                if (prevState.static_double_top[keyId - 1].target_blank) {\n                    static_double_top[keyId - 1].target_blank = false;\n                } else {\n                    static_double_top[keyId - 1].target_blank = true;\n                }\n                return { static_double_top }\n            })\n        }\n    }\n    /**\n     *Gestion de la mise à jour des champs et comparaison de state et props, vérification de chaque donnée entré par rapport aux données d'origine et changement de couleur  \n     *\n     */\n\n    //Gestion de changement et comparaison des champs tuile simples\n    hightlight(oldData,newData){\n        this.state.single.filter((word, i) => {\n            if (this.props.data[this.state.lang].single[i] === word) {\n                document.getElementsByClassName('fieldSingle')[i].getElementsByTagName('input')[0].style.color = ''\n                return null;\n            } else {\n                document.getElementsByClassName('fieldSingle')[i].getElementsByTagName('input')[0].style.color = 'orange'\n                return null;\n            }\n        }\n        );\n\n        //Gestion de changement et comparaison des champs tuile double rebond et tuile double  /!\\ A améliorer en priorités /!\\\n\n        if (this.state.double !== this.props.data[this.state.lang].double) {\n            document.getElementsByClassName('fieldTuileDouble')[0].getElementsByTagName('input')[0].style.color = 'orange'\n        } else {\n            document.getElementsByClassName('fieldTuileDouble')[0].getElementsByTagName('input')[0].style.color = ''\n        }\n\n        if (this.state.static_double.image !== this.props.data[this.state.lang].static_double.image) {\n            document.getElementsByClassName('tuileDoubleRebondOri')[0].getElementsByTagName('input')[0].style.color = 'orange'\n        } else {\n            document.getElementsByClassName('tuileDoubleRebondOri')[0].getElementsByTagName('input')[0].style.color = ''\n        }\n\n        if (this.state.static_double.link !== this.props.data[this.state.lang].static_double.link) {\n            document.getElementsByClassName('tuileDoubleRebondOri')[1].getElementsByTagName('input')[0].style.color = 'orange'\n        } else {\n            document.getElementsByClassName('tuileDoubleRebondOri')[1].getElementsByTagName('input')[0].style.color = ''\n        }\n\n        for (var property in this.state.static_double_top) {\n            if (this.state.static_double_top[property].image !== this.props.data[this.state.lang].static_double_top[property].image) {\n                document.getElementById('tuileTop').getElementsByClassName('tuileDoubleRebond')[property].getElementsByTagName('input')[0].style.color = 'orange'\n            } else {\n                document.getElementById('tuileTop').getElementsByClassName('tuileDoubleRebond')[property].getElementsByTagName('input')[0].style.color = ''\n            }\n\n            if (this.state.static_double_top[property].link !== this.props.data[this.state.lang].static_double_top[property].link) {\n                document.getElementById('tuileTop').getElementsByClassName('tuileDoubleRebond')[property].getElementsByTagName('input')[1].style.color = 'orange'\n            } else {\n                document.getElementById('tuileTop').getElementsByClassName('tuileDoubleRebond')[property].getElementsByTagName('input')[1].style.color = ''\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps,prevState,snapshot){\n        if (prevState.single.length > 0) {\n            //Comparaison de state et de props\n            if (!_.isEqual(_.omit(this.state, ['lang']), this.props.data[this.state.lang])){\n                document.getElementById('cancel').style.display = \"inline-block\"\n                document.getElementById('warningChange').style.display = \"block\"\n            } else {\n                document.getElementById('cancel').style.display = \"none\"\n                document.getElementById('warningChange').style.display = \"none\"\n            }\n        }\n\n        this.hightlight(this.props.data[this.state.lang], _.omit(prevState, ['lang', 'lang']))\n    }\n\n    componentDidMount() {\n        this.handleCancel();\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper-hp\">\n                {this.props.data &&\n                    <div id='mainWrapper'>\n                        <Tabs\n                            value={this.state.lang}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={this.handleChangeLang}\n                        >\n                            <Tab label=\"Fr\" value={'fr'}/>\n                            <Tab label=\"En\" value={'en'}/>\n                        </Tabs>\n                        <div id=\"tuileTop\" >\n                            {<Component.StaticDouble handleTargetBlank={this.handleTargetBlank} handleChangeInput={this.handleChangeInput} keyId={1} static_double={this.state.static_double_top[0]} title=\"Tuile Top 1\" hasText={true}/> }\n                            {<Component.StaticDouble handleTargetBlank={this.handleTargetBlank} handleChangeInput={this.handleChangeInput} keyId={2} static_double={this.state.static_double_top[1]} title=\"Tuile Top 2\" hasText={true}/>}\n                            {<Component.StaticDouble handleTargetBlank={this.handleTargetBlank} handleChangeInput={this.handleChangeInput} keyId={3} static_double={this.state.static_double_top[2]} title=\"Tuile Top 3\" hasText={true}/>}\n                        </div>\n                        {<Component.InputMultipleTest handleChangeInput={this.handleChangeInput} single={this.state.single} />}\n                        {<Component.StaticDouble handleTargetBlank={this.handleTargetBlank} handleChangeInput={this.handleChangeInput} static_double={this.state.static_double} title=\"Tuile double rebond\" hasText={false} />}\n                        {<Component.InputDouble handleChangeInput={this.handleChangeInput} double={this.state.double} />}\n                    </div>\n                }\n                <Sidebar \n                    handleSubmit={this.handleSubmit}\n                    handleCancel={this.handleCancel}\n                    handleInputLang={this.state.lang}\n                    hasValidated={this.state.hasValidated}\n                />\n            </div>\n        )\n    }\n}\n\nexport default FrontPage","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; \nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { orange } from '@material-ui/core/colors';\nimport Link from '@material-ui/core/Link';\nimport \"babel-polyfill\";\nimport FrontPage from './app.js';\n\n/**\n * Définition theme Material UI\n */\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#5cb7d8',\n        },\n        secondary: orange,\n    },\n    background: \"#5cb7d8\"\n});\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.fetchHomepageData = this.fetchHomepageData.bind(this);\n        this.state = {\n            data: null,\n            isLoaded: false\n        }\n    }\n\n    fetchHomepageData() {\n        let fetchedData = {};\n        fetch('/tma_cms_apps/api/v1/microsite_manager/'+ window.props.siteID +'/homepage/', \n            { \n                credentials: \"same-origin\",\n                method: \"GET\",\n            }\n        )\n        .then(response => response.json())\n        .then((json) => {\n            fetchedData = json;\n            this.setState({data: fetchedData, isLoaded: true})\n        }); \n    }\n\n    componentDidMount() {\n        this.fetchHomepageData();\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className=\"title\">Administration\n                    <Link\n                        href=\"/assets/course-v1:global+00+2019/\"\n                        target=\"_blank\"\n                    >Manage images</Link>\n                </h1>\n                <p className=\"title\">It may take time for the homepage to update due to caching policy.<br/>Please be patient to see your changes reflected.</p>\n                {this.state.isLoaded && <FrontPage data={this.state.data}/>}\n            </div>\n        )\n    }\n};\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n    </ThemeProvider>\n\n    ,\n    document.getElementById('root')\n);"],"sourceRoot":""}