{"version":3,"sources":["component.js","sidebar.js","app.js","index.js"],"names":["component","props","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","idOfTullet","highlightHelper","keyId","handleClose","react_default","a","createElement","className","title","Card","CardContent","hasText","TextField","fullWidth","keyid","onChange","e","handleChangeInput","onFocus","document","getElementsByClassName","style","backgroundColor","onBlur","label","value","static_double","text","image","InputProps","endAdornment","InputAdornment","position","IconButton","edge","aria-label","onClick","Visibility_default","size","Modal","aria-labelledby","aria-describedby","onClose","Grid","container","spacing","direction","alignItems","justify","minHeight","maxHeight","overflow","item","sm","xs","src","alt","Fab","color","Close_default","link","Checkbox","checked","target_blank","handleTargetBlank","inputProps","double","single","map","field","index","key","parseInt","Sidebar","_this","this","id","Paper","getElementsByTagName","focus","Button","variant","handleSubmit","handleCancel","handleInputLang","Component","FrontPage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","handleChangeLang","hightlight","state","lang","static_double_top","i","type","temp","target","setState","toConsumableArray","parentNode","classList","includes","prevState","assign","attributes","objectToReturn","data","concat","updateHomepageData","fetch","window","siteID","credentials","method","body","JSON","stringify","headers","Accept","Content-Type","X-CSRFToken","csrf","then","response","json","console","log","_this2","objectSpread","event","newValue","language","oldData","newData","_this3","property","filter","word","getElementById","prevProps","snapshot","length","_","isEqual","omit","display","Tabs","indicatorColor","textColor","Tab","sidebar_Sidebar","theme","createMuiTheme","palette","primary","main","secondary","orange","background","Header","handleHamMenu","handleCloseMenu","previousSibling","right","parentElement","href","App","fetchHomepageData","isLoaded","_this4","fetchedData","src_Header","app","ReactDOM","render","ThemeProvider","CssBaseline","src_App"],"mappings":"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","file":"static/js/main.18302dfd.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Visibility from '@material-ui/icons/Visibility'\nimport Close from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Modal from '@material-ui/core/Modal';\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n/**\n * Composants d'affichage des différentes section de la page et Highlight sur la sidebar (/!\\ Sortir la logique d'highlight de la sidebar de ces composants -- SoC)\n * InputMultipleTest : Tuile Simple\n * InputStaticDouble : Tuile Double Rebond\n * InputDouble : Tuile Double\n */\n\n \n /**\n  * Composant Tuile Simple \n  */\nfunction InputMultipleTest(props){\n    //Affichage des différents champs par nombre d'élèments dans le tableau des données \"Single\"\n    return (\n        <div className=\"tuilesSimple contentManage\">\n            <h2>Tuiles simples</h2>\n            <Card  className=\"card\">\n                <CardContent className=\"inputLilTuile\">\n                {\n                props.single.map((field, index) => {\n                    return (\n                        <TextField \n                            className=\"fieldSingle\" key={index} fullWidth\n                            onChange={(e) => { props.handleChangeInput(e, index)}}\n                            label={\"Course_id: \" + parseInt(index + 1)}\n                            onFocus={()=>{document.getElementsByClassName('simpleTulletIcon')[index].style.backgroundColor = \"rgb(92, 183, 216)\"}}\n                            onBlur={(e)=>{document.getElementsByClassName('simpleTulletIcon')[index].style.backgroundColor = \"\"}} \n                            value={field}>\n                        </TextField>\n                    )\n                })\n                }\n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n\n/**\n * Composant Tuile Double Rebond\n */\n\nfunction InputStaticDouble(props) {\n    //Gestion de l'affichage \"preview\" dans une popin\n    const [open, setOpen] = React.useState(false);\n    let idOfTullet = 'tuileDoubleRebondOri'; \n    let highlightHelper = 'doubleRebondTulletIcon'; \n    let keyId = props.keyId;\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n    //Affichage des deux champs : Image - Link\n    if (props.keyId){\n        idOfTullet = 'tuileDoubleRebond' + props.keyId\n        highlightHelper = 'doubleRebondTulletIcon' + props.keyId; \n    }else{\n        keyId = 'original'\n    }\n        return (\n            <div className=\"tuileDoubleRebond contentManage\">\n                <h2>{props.title}</h2>\n                <Card>\n                    <CardContent>\n                        {props.hasText &&\n                            <TextField \n                                fullWidth\n                                className={idOfTullet + ' fieldTuileDoubleRebond'}\n                                keyid={props.keyId}\n                                onChange={(e) => {\n                                        props.handleChangeInput(e, false, \"text\")\n                                    }} onFocus={() => {\n                                        document.getElementsByClassName(highlightHelper)[0].style.backgroundColor = \"rgb(92, 183, 216)\"\n                                    }} onBlur={(e) => {\n                                        document.getElementsByClassName(highlightHelper)[0].style.backgroundColor = \"\"\n                                    }\n                                    }\n                                label=\"Text\"\n                                value={props.static_double ? props.static_double.text : \"\"}\n                            ></TextField>\n                        }\n\n                        <TextField \n                            fullWidth\n                            className={idOfTullet + ' fieldTuileDoubleRebond'}\n                            keyid={props.keyId}\n                            onChange={(e) => {\n                                    props.handleChangeInput(e, false, \"image\")\n                                }} onFocus={() => {\n                                    document.getElementsByClassName(highlightHelper)[0].style.backgroundColor = \"rgb(92, 183, 216)\"\n                                }} onBlur={(e) => {\n                                    document.getElementsByClassName(highlightHelper)[0].style.backgroundColor = \"\"\n                                }\n                            }\n                            label=\"Image\"\n                            value={props.static_double ? props.static_double.image : \"\"}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment  position=\"end\">\n                                        <IconButton\n                                            edge=\"end\"\n                                            aria-label=\"Toggle Image\"\n                                            onClick={handleOpen}\n                                        >\n                                            <Visibility size=\"small\" />\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}  \n                        ></TextField>\n                        <Modal\n                            aria-labelledby=\"simple-modal-title\"\n                            aria-describedby=\"simple-modal-description\"\n                            open={open}\n                            onClose={handleClose}\n                        >\n                            <Grid\n                                container\n                                spacing={0}\n                                direction=\"row\"\n                                alignItems=\"center\"\n                                justify=\"center\"\n                                style={{ minHeight: '100vh', maxHeight: '100%',overflow : 'auto' }}\n                        >\n                                <Grid className=\"displayPreviewImage\" item sm={9} xs={10}>\n                                    <img src={props.static_double ? props.static_double.image : ''} alt={props.static_double ? props.static_double.image : \"\"} />\n                                    <div className='closeButton'>\n                                        <Fab color='secondary' onClick={handleClose} size=\"small\" className='fabWrapperCloseButton'>\n                                            <Close  className=\"closeColor\"/>    \n                                        </Fab>\n                                    </div>\n                                </Grid>\n                               \n                            </Grid> \n                        </Modal>\n\n                        <TextField\n                            fullWidth\n                            className={idOfTullet + ' fieldTuileDoubleRebond'}\n                            keyid={props.keyId}\n                            onChange={(e) => {\n                                    props.handleChangeInput(e, false, \"link\")\n                                }} onFocus={() => {\n                                    document.getElementsByClassName(highlightHelper)[0].style.backgroundColor = \"rgb(92, 183, 216)\"\n                                }} onBlur={(e) => {\n                                    document.getElementsByClassName(highlightHelper)[0].style.backgroundColor = \"\"\n                                }\n                                }\n                            label=\"Lien\"\n                            onClick={handleClose}\n                            value={props.static_double ? props.static_double.link : ''}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <Checkbox\n                                            checked={props.static_double ? props.static_double.target_blank : ''}\n                                            onChange={() => { props.handleTargetBlank(keyId) }}\n                                            value=\"target_blank\"\n                                            inputProps={{\n                                                'aria-label': 'primary checkbox',\n                                            }}\n                                        />\n\n                                    </InputAdornment>\n                                ),\n                        }}\n                        ></TextField>\n\n                    </CardContent>\n                </Card>\n            </div>\n        )\n}\n\n\n/**\n * Composant Tuile Double\n */\nfunction InputDouble(props){\n    //Affichage du champ\n    return (\n        <div className=\"tuileDouble contentManage\">\n            <h2>Tuile double</h2>\n            <Card>\n                <CardContent>\n                    <TextField className=\"fieldTuileDouble\" fullWidth onChange={(e) => {\n                        props.handleChangeInput(e)\n                    }} onFocus={() => {\n                        document.getElementsByClassName('doublesimpleTulletIcon')[0].style.backgroundColor = \"rgb(92, 183, 216)\"\n                    }} onBlur={(e) => {\n                        document.getElementsByClassName('doublesimpleTulletIcon')[0].style.backgroundColor = \"\"\n                    }\n                        } label=\"Course_id: 9\" value={props.double ? props.double : \"\"}></TextField>\n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n\n\n\nexport default {\n    StaticDouble: InputStaticDouble,\n    InputDouble: InputDouble,\n    InputMultipleTest: InputMultipleTest\n}","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\n\n/**\n * Composant Sidebar\n * Affichage d'une petite section sur le coté lié au différent champs, hightlight lors d'un focus et permet de cliquer pour rejoindre directement  un champs\n * Affichage des boutons \"VALIDER\" et \"ANNULER\"\n */\nexport default class Sidebar extends React.Component {\n    render() {\n        return (\n            <Card id=\"cardSidebar\">\n                <CardContent  >\n                    \n                    <Grid className=\"sidebarTulletWrapper\" container direction=\"row\" justify=\"space-between\" alignItems=\"stretch\">\n                        <Grid item xs={4}>\n                            <Paper className=\" doubleRebondTulletIcon1 sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('tuileDoubleRebond1')[0].getElementsByTagName('input')[0].focus()\n                            }}>Tuile Top 1</Paper>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Paper className=\"doubleRebondTulletIcon2 sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('tuileDoubleRebond2')[0].getElementsByTagName('input')[0].focus()\n                            }}>Tuile Top 2</Paper>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Paper className=\"doubleRebondTulletIcon3 sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('tuileDoubleRebond3')[0].getElementsByTagName('input')[0].focus()\n                            }}>Tuile Top 3</Paper>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Paper className=\"simpleTulletIcon sidebarTullet noselect\" onClick={(e)=>{\n                                document.getElementsByClassName('fieldSingle')[0].getElementsByTagName('input')[0].focus()\n                            }}>Tuile 1</Paper>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Paper className=\"simpleTulletIcon sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('fieldSingle')[1].getElementsByTagName('input')[0].focus()\n                            }} >Tuile 2</Paper>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Paper className=\"doubleRebondTulletIcon sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('tuileDoubleRebondOri')[0].getElementsByTagName('input')[0].focus()\n                            }}>Double rebond</Paper>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Paper className=\"simpleTulletIcon sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('fieldSingle')[2].getElementsByTagName('input')[0].focus()\n                            }} >Tuile  3</Paper>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Paper className=\"simpleTulletIcon sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('fieldSingle')[3].getElementsByTagName('input')[0].focus()\n                            }} >Tuile 4</Paper>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Paper className=\"doublesimpleTulletIcon sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('fieldTuileDouble')[0].getElementsByTagName('input')[0].focus()\n                            }}>Double</Paper>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Paper className=\"simpleTulletIcon sidebarTullet noselect\"  onClick={(e) => {\n                                document.getElementsByClassName('fieldSingle')[4].getElementsByTagName('input')[0].focus()\n                            }} >Tuile 5</Paper>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Paper className=\"simpleTulletIcon sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('fieldSingle')[5].getElementsByTagName('input')[0].focus()\n                            }} >Tuile 6</Paper>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Paper className=\"simpleTulletIcon sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('fieldSingle')[6].getElementsByTagName('input')[0].focus()\n                            }} >Tuile 7</Paper>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Paper className=\"simpleTulletIcon sidebarTullet noselect\" onClick={(e) => {\n                                document.getElementsByClassName('fieldSingle')[7].getElementsByTagName('input')[0].focus()\n                            }} >Tuile 8</Paper>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <div id=\"buttonWrapper\">\n                    <Button className=\"submitJson\" color=\"primary\" size=\"small\" variant=\"outlined\" onClick={(e) => {\n                        this.props.handleSubmit(e)\n                    }} > Valider </Button>\n                    <div id=\"cancel\">\n                    <Button className=\"reinitJson\" color=\"secondary\" size=\"small\" variant=\"outlined\" onClick={(e) => {\n                        this.props.handleCancel(this.props.handleInputLang)\n                    }} > Annuler </Button>\n                    <p id='warningChange'>Des Changements sont en cours</p>\n                    </div>\n                </div>\n            </Card>\n        )\n    }\n}\n\n\n","import React from 'react';\nimport Component from './component.js';\nimport Sidebar from './sidebar.js';\nimport _ from 'lodash';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { ThemeProvider } from '@material-ui/styles';\n/**\n * Main App, Gestion de la logique des entrées et sorties utilisateurs\n */\n\nclass FrontPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChangeInput = this.handleChangeInput.bind(this)\n        this.handleCancel = this.handleCancel.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChangeLang = this.handleChangeLang.bind(this)\n        this.hightlight = this.hightlight.bind(this)\n        this.handleTargetBlank = this.handleTargetBlank.bind(this)\n        this.state = {\n            lang: 'fr',\n            static_double_top: [],\n            single: [],\n            double: '',\n            static_double: {}\n        }\n    }\n    /**\n     * Gestion des entrés dans les champs\n     * @param {element cible, objet HTML e.target lors d'un event 'change'} e \n     * @param {*Gestion de l'index des tuiles simples} i \n     * @param {*Définition du type (image ou link) pour les champs tuiles doubles} type \n     */\n    handleChangeInput(e, i, type) {\n        if (i || i === 0) {\n            let temp = this.state.single\n            temp[i] = e.target.value;\n            this.setState({ single: temp })\n\n        } else if (type) {\n            let temp = [...e.target.parentNode.parentNode.classList];\n            if (temp.includes('tuileDoubleRebondOri')){\n                let static_double = this.state.static_double\n                let value = e.target.value;\n                this.setState(prevState => {\n                    Object.assign({}, prevState.static_double);\n                    static_double[type] = value;\n                    return { static_double }\n                })\n            }else{\n                let temp = [...e.target.parentNode.parentNode.attributes][1].value;\n                let value = e.target.value;\n                let static_double_top = this.state.static_double_top\n                this.setState(prevState => {\n                    Object.assign(static_double_top, prevState.static_double_top)\n                    static_double_top[parseInt(temp) - 1][type] = value;\n                    return { static_double_top}\n                })\n            }\n        } else {\n            this.setState({ double: e.target.value })\n        }\n    }\n    /**\n     * Gestion de l'envoie de données selon un format bien précis et le state du composant App\n     * Pour le moment juste un log dans la console\n     */\n    handleSubmit(){\n        let objectToReturn = this.props.data;\n        let jsonCode = `\n        {${this.state.lang}:{\n                \"static_double_top\":[\n                    {\n                        \"text\": ${this.state.static_double_top[0].text},\n                        \"image\": ${this.state.static_double_top[0].image},\n                        \"link\":  ${this.state.static_double_top[0].link},\n                        \"target_blank\" : ${this.state.static_double_top.target_blank}\n                    },{\n                        \"text\": ${this.state.static_double_top[1].text},\n                        \"image\": ${this.state.static_double_top[1].image},\n                        \"link\":  ${this.state.static_double_top[1].link},\n                        \"target_blank\" : ${this.state.static_double_top.target_blank}\n                    },{\n                        \"text\": ${this.state.static_double_top[2].text},\n                        \"image\": ${this.state.static_double_top[2].image},\n                        \"link\":  ${this.state.static_double_top[2].link},\n                        \"target_blank\" : ${this.state.static_double_top.target_blank}\n                    }\n                ],\n                \"single\" : ${this.state.single},\n                \"double\" : ${this.state.double},\n                \"static_double\" : {\n                    \"image\" : ${this.state.static_double.image},\n                    \"link\" : ${this.state.static_double.link},\n                        \"target_blank\" : ${this.state.static_double.target_blank}\n                    }   \n                }\n            }`\n\n        objectToReturn[this.state.lang] = this.state;\n\n        this.updateHomepageData(objectToReturn)\n    }\n\n    updateHomepageData(data) {\n        fetch('/tma_cms_apps/api/v1/microsite_manager/'+ window.props.siteID + '/homepage/', \n            { \n                credentials: \"same-origin\",\n                method: \"PUT\",\n                body: JSON.stringify(data),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': window.csrf\n                }\n            }\n        )\n        .then(response => response.json())\n        .then((json) => {\n            console.log('success')\n            console.log(json)\n        }); \n    }\n\n    /**\n     * Gestion de l'annulation d'un champ en récuperant les information à travers les props\n     */\n    handleCancel() {\n        this.setState(()=>{\n            return {\n                static_double_top: [\n                    { ...this.props.data[this.state.lang].static_double_top[0] },\n                    { ...this.props.data[this.state.lang].static_double_top[1] },\n                    { ...this.props.data[this.state.lang].static_double_top[2] }\n                ],\n                single: [...this.props.data[this.state.lang].single],\n                double: this.props.data[this.state.lang].double,\n                static_double: { ...this.props.data[this.state.lang].static_double }\n            }\n        })\n    }\n\n    handleChangeLang (event,newValue){\n        let language = '';\n        if (newValue === 'en') {\n            language = 'en'\n        } else if (newValue === 'fr') {\n            language = 'fr'\n        } else {\n            return\n        }\n        this.setState({\n            lang: language,\n            static_double_top: [\n                { ...this.props.data[language].static_double_top[0] },\n                { ...this.props.data[language].static_double_top[1] },\n                { ...this.props.data[language].static_double_top[2] }\n            ],\n            single: [...this.props.data[language].single],\n            double: this.props.data[language].double,\n            static_double: { ...this.props.data[language].static_double }\n        })\n    }\n\n    handleTargetBlank(keyId){\n        if (keyId === \"original\") {\n            let static_double = this.state.static_double\n            this.setState(prevState => {\n                Object.assign({}, prevState.static_double);\n                if (prevState.static_double.target_blank) {\n                    static_double.target_blank = false;\n                } else {\n                    static_double.target_blank = true;\n                }\n                return { static_double }\n            })\n        }else{\n            \n            let static_double_top = this.state.static_double_top\n            this.setState(prevState => {\n                Object.assign({}, prevState.static_double_top[keyId - 1]);\n                if (prevState.static_double_top[keyId - 1].target_blank) {\n                    static_double_top[keyId - 1].target_blank = false;\n                } else {\n                    static_double_top[keyId - 1].target_blank = true;\n                }\n                return { static_double_top }\n            })\n        }\n    }\n    /**\n     *Gestion de la mise à jour des champs et comparaison de state et props, vérification de chaque donnée entré par rapport aux données d'origine et changement de couleur  \n     *\n     */\n\n    //Gestion de changement et comparaison des champs tuile simples\n    hightlight(oldData,newData){\n        this.state.single.filter((word, i) => {\n            if (this.props.data[this.state.lang].single[i] === word) {\n                document.getElementsByClassName('fieldSingle')[i].getElementsByTagName('input')[0].style.color = ''\n                return null;\n            } else {\n                document.getElementsByClassName('fieldSingle')[i].getElementsByTagName('input')[0].style.color = 'orange'\n                return null;\n            }\n        }\n        );\n\n        //Gestion de changement et comparaison des champs tuile double rebond et tuile double  /!\\ A améliorer en priorités /!\\\n\n        if (this.state.double !== this.props.data[this.state.lang].double) {\n            document.getElementsByClassName('fieldTuileDouble')[0].getElementsByTagName('input')[0].style.color = 'orange'\n        } else {\n            document.getElementsByClassName('fieldTuileDouble')[0].getElementsByTagName('input')[0].style.color = ''\n        }\n\n        if (this.state.static_double.image !== this.props.data[this.state.lang].static_double.image) {\n            document.getElementsByClassName('tuileDoubleRebondOri')[0].getElementsByTagName('input')[0].style.color = 'orange'\n        } else {\n            document.getElementsByClassName('tuileDoubleRebondOri')[0].getElementsByTagName('input')[0].style.color = ''\n        }\n\n        if (this.state.static_double.link !== this.props.data[this.state.lang].static_double.link) {\n            document.getElementsByClassName('tuileDoubleRebondOri')[1].getElementsByTagName('input')[0].style.color = 'orange'\n        } else {\n            document.getElementsByClassName('tuileDoubleRebondOri')[1].getElementsByTagName('input')[0].style.color = ''\n        }\n\n        for (var property in this.state.static_double_top) {\n            if (this.state.static_double_top[property].image !== this.props.data[this.state.lang].static_double_top[property].image) {\n                document.getElementById('tuileTop').getElementsByClassName('tuileDoubleRebond')[property].getElementsByTagName('input')[0].style.color = 'orange'\n            } else {\n                document.getElementById('tuileTop').getElementsByClassName('tuileDoubleRebond')[property].getElementsByTagName('input')[0].style.color = ''\n            }\n\n            if (this.state.static_double_top[property].link !== this.props.data[this.state.lang].static_double_top[property].link) {\n                document.getElementById('tuileTop').getElementsByClassName('tuileDoubleRebond')[property].getElementsByTagName('input')[1].style.color = 'orange'\n            } else {\n                document.getElementById('tuileTop').getElementsByClassName('tuileDoubleRebond')[property].getElementsByTagName('input')[1].style.color = ''\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps,prevState,snapshot){\n        if (prevState.single.length > 0) {\n            //Comparaison de state et de props\n            if (!_.isEqual(_.omit(this.state, ['lang']), this.props.data[this.state.lang])){\n                document.getElementById('cancel').style.display = \"block\"\n            }else{\n                document.getElementById('cancel').style.display = \"none\"\n            }\n        }\n\n        this.hightlight(this.props.data[this.state.lang], _.omit(prevState, ['lang', 'lang']))\n    }\n\n    componentDidMount() {\n        this.handleCancel();\n        console.log(this.state)\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                {this.props.data &&\n                    <div id='mainWrapper'>\n                        <Tabs\n                            value={this.state.lang}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={this.handleChangeLang}\n                        >\n                            <Tab label=\"Fr\" value={'fr'}/>\n                            <Tab label=\"En\" value={'en'}/>\n                        </Tabs>\n                        <div id=\"tuileTop\" >\n                            {<Component.StaticDouble handleTargetBlank={this.handleTargetBlank} handleChangeInput={this.handleChangeInput} keyId={1} static_double={this.state.static_double_top[0]} title=\"Tuile Top 1\" hasText={true}/> }\n                            {<Component.StaticDouble handleTargetBlank={this.handleTargetBlank} handleChangeInput={this.handleChangeInput} keyId={2} static_double={this.state.static_double_top[1]} title=\"Tuile Top 2\" hasText={true}/>}\n                            {<Component.StaticDouble handleTargetBlank={this.handleTargetBlank} handleChangeInput={this.handleChangeInput} keyId={3} static_double={this.state.static_double_top[2]} title=\"Tuile Top 3\" hasText={true}/>}\n                        </div>\n                        {<Component.InputMultipleTest handleChangeInput={this.handleChangeInput} single={this.state.single} />}\n                        {<Component.StaticDouble handleTargetBlank={this.handleTargetBlank} handleChangeInput={this.handleChangeInput} static_double={this.state.static_double} title=\"Tuile double rebond\" hasText={false} />}\n                        {<Component.InputDouble handleChangeInput={this.handleChangeInput} double={this.state.double} />}\n                    </div>\n                }\n                <Sidebar handleSubmit={this.handleSubmit} handleCancel={this.handleCancel} handleInputLang={this.state.lang}/>{/* Fichier sidebar.js */}\n            </div>\n        )\n    }\n}\n\nexport default FrontPage","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; \nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { orange } from '@material-ui/core/colors';\nimport \"babel-polyfill\";\nimport FrontPage from './app.js';\n\n/**\n * Définition theme Material UI\n */\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#5cb7d8',\n        },\n        secondary: orange,\n    },\n    background: \"#5cb7d8\"\n});\n\n/**\n * Composant Header pour démonstration \n */\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleHamMenu = this.handleHamMenu.bind(this)\n        this.handleCloseMenu = this.handleCloseMenu.bind(this)\n    }\n\n    handleHamMenu(e) {\n        let element = e.target;\n        element.previousSibling.style.right = \"0%\"\n    }\n\n    handleCloseMenu(e) {\n        let element = e.target;\n        element.parentElement.style.right = \"-45%\"\n    }\n\n    render() {\n        return (\n            <div className=\"header\">\n                <div className=\"headWrapper\">\n                    <a className=\"logo\" href=\"/\">\n                        <img src=\"/static/studio/tma-cms-static/images/amundi-phileas-logo.png\" alt=\"Phileas\" />\n                    </a>\n                    <a href=\"/\" className=\"back-btn\">Back</a>\n                    <div className=\"rightSection\">\n                        <div className=\"closeMenu\" onClick={e => { this.handleCloseMenu(e) }}></div>\n                    </div>\n                    <div className=\"hamButton\" onClick={e => { this.handleHamMenu(e) }}></div>\n                </div>\n            </div>\n        )\n    }\n};\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.fetchHomepageData = this.fetchHomepageData.bind(this);\n        this.state = {\n            data: null,\n            isLoaded: false\n        }\n    }\n\n    fetchHomepageData() {\n        let fetchedData = {};\n        fetch('/tma_cms_apps/api/v1/microsite_manager/'+ window.props.siteID +'/homepage/', \n            { \n                credentials: \"same-origin\",\n                method: \"GET\",\n            }\n        )\n        .then(response => response.json())\n        .then((json) => {\n            fetchedData = json;\n            this.setState({data: fetchedData, isLoaded: true})\n        }); \n    }\n\n    componentDidMount() {\n        console.log('App did mount')\n        this.fetchHomepageData();\n    }\n\n    componentDidUpdate() {\n        console.log('I just updated')\n    }\n\n    render() {\n        return (\n            <div>\n                <Header />\n                <h1 className=\"title\">Administration</h1>\n                {this.state.isLoaded && <FrontPage data={this.state.data}/>}\n            </div>\n        )\n    }\n};\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n    </ThemeProvider>\n\n    ,\n    document.getElementById('root')\n);"],"sourceRoot":""}