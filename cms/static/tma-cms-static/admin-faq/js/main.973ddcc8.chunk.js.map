{"version":3,"sources":["components/MenuTabTopics.js","components/LangPicker.js","components/TopicHandlers.js","App.js","index.js"],"names":["MenuTabTopics","props","topics","onScreen","slice","map","topic","index","react_default","a","createElement","Tab","key","nameTopic","label","value","id","Tabs","selectedTopic","indicatorColor","onChange","handleChangeTabTopic","variant","length","Button","color","size","onClick","e","addField","Add_default","LangPicker","className","style","textAlign","padding","Select","lang","selectLang","MenuItem","localize","en","name","image","delete","addSubTopic","subTopicName","addQuestion","answer","cancel","submit","fr","TabTopics","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","handleClose","handleOpen","_React$createElement","Card","CardContent","CardActions","TextField","handleChange","target","icon","InputProps","endAdornment","InputAdornment","position","IconButton","edge","aria-label","Visibility_default","removeField","cloneElement","children","idx","handleSubmit","change","defineProperty","handleCancel","lib_default","axis","onChangeIndex","Modal","onClose","display","height","verticalAlign","src","alt","backgroundColor","Close_default","SubTopics","content","subTopic","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","nameSubTopic","ExpansionPanelDetails","fullWidth","rows","data","ExpansionPanelActions","QAndA","console","log","response","question","ts","inline","init","plugins","onEditorChange","localizeApp","createTopic","noTopic","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeSubtopic","panel","event","isExpanded","state","expanded","dataOld","loading","bind","assertThisInitialized","initData","fetchingData","postingData","_this2","fetch","window","siteID","credentials","method","then","json","dataFetched","setState","Immutable","fromJS","_this3","body","JSON","stringify","toJS","headers","Accept","Content-Type","X-CSRFToken","csrf","type","_this4","_ref","updateIn","arr","push","idTopic","_ref2","newId","uid","_ref3","namequestion","questionId","i","_this5","_ref4","deleteIn","_ref5","_ref6","_ref7","_this6","_ref8","_ref9","_ref10","_ref11","_ref12","changeBool","alert","equals","detecteChange","_this7","_ref13","_this8","href","CircularProgress","components_LangPicker","components_MenuTabTopics","Component","theme","createMuiTheme","palette","primary","main","secondary","orange","background","ReactDOM","render","ThemeProvider","CssBaseline","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.973ddcc8.chunk.js","sourcesContent":["import React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\n\nfunction MenuTabTopics(props) {\n  let topics = props.topics\n  topics = topics.slice(0, 4)\n  let onScreen = topics.map(\n    (topic, index) => {\n      return (\n        <Tab key={topic.nameTopic + index} label={topic.nameTopic} value={index} />\n      )\n    })\n  return (\n    <div id={'tabsWrapper'}>\n      <Tabs\n        id={'tabsElementWrapper'}\n        value={props.selectedTopic}\n        indicatorColor=\"primary\"\n        onChange={props.handleChangeTabTopic}\n        variant=\"fullWidth\"\n      >\n        {onScreen}\n\n      </Tabs>\n      {props.topics.length < 4 &&\n        <Button id=\"addTopicButton\" color=\"primary\" size=\"small\" variant=\"contained\" onClick={(e) => { props.addField('topic', e) }} > <AddIcon /> </Button>\n      }\n    </div>\n  )\n}\nexport default MenuTabTopics","import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nfunction LangPicker(props) {\n  return (\n\n    <div className=\"langPicker\" style={{textAlign: 'right',padding:' 10px 0px'}}>\n      <Select\n        value={props.lang}\n        onChange={props.selectLang}\n      >\n        <MenuItem value={'fr'}>Fr</MenuItem>\n        <MenuItem value={'en'}>En</MenuItem>\n      </Select>\n    </div>\n  )\n}\n\n\nexport default LangPicker\n","import React from 'react';\nimport tinymce from 'tinymce/tinymce';\nimport { Editor } from '@tinymce/tinymce-react';\nimport Modal from '@material-ui/core/Modal';\nimport Container from '@material-ui/core/Container';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility'\nimport CloseIcon from '@material-ui/icons/Close'\nimport SwipeableViews from 'react-swipeable-views';\nimport { Card, CardContent, CardActions } from '@material-ui/core';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport 'tinymce/skins/ui/oxide/skin.min.css'\nimport 'tinymce/skins/ui/oxide/content.min.css'\nimport 'tinymce/plugins/image'\nimport 'tinymce/plugins/link'\nimport 'tinymce/plugins/code'\nimport 'tinymce/themes/silver'\nimport 'tinymce/themes/silver'\n\nconst localize = {\n    en : {\n      name : \"Name\",\n      image : \"Image\",\n      delete : \"Delete\",\n      addSubTopic : \"Add a subTopic\",\n      subTopicName : \"Subtopic name\",\n      addQuestion : \"Add a question\",\n      answer : \"Answer\",\n      cancel : \"Cancel\",\n      submit : \"Submit\",\n      onChange : \"Unsaved changes\",\n    },\n    fr : {\n      name : \"Nom\",\n      image : \"Icône\",\n      delete : \"Supprimer\",\n      addSubTopic : \"Ajouter un sous-topic\",\n      subTopicName : \"Nom de sous-topic\",\n      addQuestion : \"Ajouter une question\",\n      answer : \"Réponse\",\n      cancel : \"Annuler\",\n      submit : \"Valider\",\n      onChange : \"Des changements sont en cours \",\n    }\n}\n\n\nfunction TabTopics(props) {\n    const [open, setOpen] = React.useState(false);\n    let topics = props.topics\n    topics = topics.slice(0, 4)\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n    let onScreen = topics.map(\n        (topic, index) => {\n            return (\n                <div className='tabTopic' key={topic + index}>\n                    <Card className='topicInput'>\n                        <CardContent>\n                            <center>\n                                <h4>\n                                    {topic.nameTopic}\n                                </h4>\n                            </center>\n                        </CardContent>\n                        <CardActions>\n                            <div className='TopicName'>\n                                <div className='inputTopicWrapper'>\n\n                                    <TextField className=\"inputTopic\" label={localize[props.lang].name } onChange={(e) => { props.handleChange(e.target.value, [index, \"topic\", 'name']) }} value={topic.nameTopic}></TextField>\n                                    <TextField\n                                        className=\"inputTopic\"\n                                        label={localize[props.lang].image}\n                                        onChange={(e) => { props.handleChange(e.target.value, [index, \"topic\", 'icon']) }} value={topic.icon}\n                                        InputProps={{\n                                            endAdornment: (\n                                                <InputAdornment position=\"end\">\n                                                    <IconButton\n                                                        edge=\"end\"\n                                                        aria-label=\"Toggle Image\"\n                                                        onClick={handleOpen}\n                                                    >\n                                                        <Visibility size=\"small\" />\n                                                    </IconButton>\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                    >\n\n                                    </TextField>\n                                </div>\n                                <div>\n                                    <Button className='buttonStylised' color='primary' style={{color:\"#fff\"}} variant=\"contained\" onClick={(e) => {\n                                        props.addField('subTopic', index)\n                                    }} size=\"small\">{localize[props.lang].addSubTopic} </Button>\n                                    <Button className='buttonStylised' color='secondary' style={{ color: \"#fff\" }} variant=\"contained\" onClick={(e) => {\n                                        props.removeField('topic', index)\n                                    }} size=\"small\">{localize[props.lang].delete}</Button>\n                                </div>\n\n                            </div>\n\n                        </CardActions>\n                    </Card>\n                    <div className='topicContent'>\n                        {React.cloneElement(props.children, { topics: topics[index], idx: index })}\n                    </div>\n                    <div className=\"buttonWrapper\">\n                        <Button className=\"submitJson buttonStylised\" style={{ color: '#fff' }} color=\"primary\" size=\"small\" variant=\"contained\" onClick={(e) => {\n                            props.handleSubmit(e)\n                        }} > {localize[props.lang].submit }</Button>\n                        {\n                            props.change === true &&\n                            <div id=\"cancel\">\n                                <p className='buttonStylised warningChange'>{localize[props.lang].onChange }</p>\n                                <Button className='buttonStylised' className=\"reinitJson\" style={{ color: '#fff' }} color=\"secondary\" size=\"small\" variant=\"contained\" onClick={(e) => {\n                                    props.handleCancel(e)\n                                }} > {localize[props.lang].cancel }</Button>\n\n                            </div>\n\n                        }\n\n                    </div>\n                </div>\n            )\n        })\n    return (\n        <SwipeableViews\n            axis={'x'}\n            index={props.selectedTopic}\n            onChangeIndex={props.handleChangeTabTopic}\n        >\n            {onScreen}\n            <Modal open={open}\n                onClose={handleClose}\n                style={{ textAlign:\"center\",display: \"grid\" }}\n            >\n                    <div>\n\n                    <span style={{ height: '100%', verticalAlign: \"middle\", display: \"inline-block\" }}></span>\n                    <img className='previewImg' src={props.topics[props.selectedTopic].icon} alt={props.topics[props.selectedTopic].icon} />\n                        <IconButton\n                        style={{ position: \"absolute\", backgroundColor:'#ff6d00'}}\n                            edge=\"end\"\n                            aria-label=\"Close Image\"\n                            onClick={handleClose}\n                        color=\"secondary\"\n\n                        >\n                            <CloseIcon style={{color:\"white\"}} size=\"small\" />\n                        </IconButton>\n\n\n                    </div>\n\n\n\n\n\n\n            </Modal>\n        </SwipeableViews>\n    )\n}\n\n\nfunction SubTopics(props) {\n\n    let topics = props.topics\n    let onScreen = topics.content.map(\n        (subTopic, index) => {\n            return (\n                <ExpansionPanel key={index} >\n                    <ExpansionPanelSummary\n                        className='sousTopic'\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"\n                    >\n                        <h3>{subTopic.nameSubTopic}</h3>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className=\"subTopicFields\">\n                        <TextField label={localize[props.lang].subTopicName } onChange={(e) => { props.handleChange(e.target.value, [props.idx, \"subtopic\", index]) }} fullWidth rows='12' value={subTopic.nameSubTopic}></TextField>\n                        {React.cloneElement(props.children, { data: subTopic.content, topic: props.idx, subTopic: index })}\n                    </ExpansionPanelDetails>\n                    <ExpansionPanelActions>\n                        <Button color='primary' onClick={(e) => {\n                            props.addField('question', props.idx, index)\n                        }} size=\"small\">{localize[props.lang].addQuestion }</Button>\n                        <Button color='secondary' onClick={(e) => {\n                            props.removeField('subTopic', props.idx, index)\n                        }} size=\"small\">{localize[props.lang].delete }</Button>\n                    </ExpansionPanelActions>\n\n                </ExpansionPanel>\n            )\n        })\n    return (\n        <div>\n            {onScreen}\n        </div>\n    )\n}\n\nfunction QAndA(props) {\n\n    let topics = props.data\n    let onScreen = topics.map(\n        (topic, index) => {\n        console.log(topic.response)\n            return (\n                <ExpansionPanel key={index} >\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"\n                    >\n                    <h4>{topic.question}</h4>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className=\"qAndAFields\">\n                        <TextField label=\"Question\" fullWidth rows='12' value={topic.question} onChange={(e) => { props.handleChange(e.target.value, [props.topic, props.subTopic, \"question\", index]) }}></TextField>\n                        <p>{localize[props.lang].answer}:</p>\n                        <Editor inline className=\"tiny\" init={{  plugins: 'link image code' }} value={topic.response} onEditorChange={(e) => {props.handleChange(e, [props.topic, props.subTopic, \"response\", index]) }} />\n                    </ExpansionPanelDetails>\n                    <ExpansionPanelActions>\n                        <Button color='secondary' onClick={(e) => {\n                            props.removeField('question', props.topic, props.subTopic, index)\n                        }} size=\"small\">{localize[props.lang].delete}</Button>\n                    </ExpansionPanelActions>\n                </ExpansionPanel>\n            )\n        })\n    return (\n        <div className=\"qAndAWrappers\">\n            {onScreen}\n        </div>\n    )\n}\n\nexport { QAndA , TabTopics, SubTopics  }\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Immutable from 'immutable'\nimport './App.css';\nimport MenuTabTopics from './components/MenuTabTopics';\nimport LangPicker from './components/LangPicker';\nimport { TabTopics, SubTopics, QAndA } from './components/TopicHandlers';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport uid from 'uid';\n\nconst localizeApp = {\n  en : {\n    submit : 'Submit',\n    cancel : 'Cancel',\n    createTopic : 'Create a Topic',\n    noTopic : 'You have no topic',\n    onChange : \"Unsaved changes\"\n  },\n  fr : {\n    submit : 'Valider',\n    cancel : 'Annuler',\n    createTopic : 'Créer un topic',\n    noTopic : \"Vous n'avez aucun topic\",\n    onChange : \"Des changements sont en cours\"\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lang: 'fr',\n      selectedTopic: 0,\n      expanded: false,\n      data: [],\n      dataOld:[],\n      change : false,\n      loading : true,\n    }\n    this.handleChangeTabTopic = this.handleChangeTabTopic.bind(this)\n    this.handleChangeSubtopic = this.handleChangeSubtopic.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleCancel = this.handleCancel.bind(this)\n    this.addField = this.addField.bind(this)\n    this.removeField = this.removeField.bind(this)\n    this.initData = this.initData.bind(this)\n    this.fetchingData = this.fetchingData.bind(this)\n    this.postingData = this.postingData.bind(this)\n    this.selectLang = this.selectLang.bind(this)\n  }\n  fetchingData(){\n    fetch('/tma_cms_apps/api/v1/microsite_manager/json/' + window.siteID.siteID + '/faq/',\n        {\n            credentials: \"same-origin\",\n            method: \"GET\",\n        }\n    )\n    .then(response => response.json())\n    .then((json) => {\n        var dataFetched = json\n\n        this.setState({ data: Immutable.fromJS(dataFetched),loading:false,dataOld: Immutable.fromJS(dataFetched)})\n      });\n  }\n  postingData(){\n    fetch('/tma_cms_apps/api/v1/microsite_manager/json/' + window.siteID.siteID + '/faq/',\n      {\n        credentials: \"same-origin\",\n        method: \"PUT\",\n        body: JSON.stringify(this.state.data.toJS()),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-CSRFToken': window.csrf\n        }\n      }\n    )\n      .then(response => response.json())\n      .then((json) => {\n        this.fetchingData()\n      });\n  }\n  selectLang(e){\n    this.setState({\n      lang: e.target.value,\n      selectedTopic : 0\n    })\n  }\n  handleChangeTabTopic(e, value) {\n    this.setState({\n      selectedTopic: value\n    })\n  }\n\n  handleChangeSubtopic = panel => (event, isExpanded) => {\n    if (isExpanded) {\n      return panel = true\n\n    } else {\n      return panel = false\n    }\n  }\n\n  addField(type, e, a) {\n    if (type === 'topic') {\n      this.setState(({ data }) => (\n        {\n          data: data.updateIn([this.state.lang], arr => arr.push(Immutable.fromJS({ content: [], icon: '', idTopic: '', nameTopic: 'TopicName' }))),\n        }));\n    }\n    if (type === 'subTopic') {\n      this.setState(({ data }) => (\n        {\n          data: data.updateIn([this.state.lang, e, 'content'], arr => arr.push(\n            Immutable.fromJS({ nameSubTopic: 'SubTopicName', content: [] })\n          ))\n        }));\n    }\n    if (type === 'question') {\n      let newId = uid(10);\n      this.setState(({ data }) => (\n        {\n          data: data.updateIn([this.state.lang, e, 'content', a, 'content'], arr => arr.push(\n            Immutable.fromJS({ namequestion: 'Question',questionId : newId ,question: 'Question', response: '' })))\n        }));\n    }\n  }\n  removeField(type, i, e, a) {\n\n    if (type === 'topic') {\n      if (this.state.selectedTopic > this.state.data.toJS()[this.state.lang].length - 2) {\n        this.setState(({ data }) => (\n          {\n            selectedTopic: i>0? i - 1 : 0,\n            data: data.deleteIn([this.state.lang, i])\n          }));\n      } else {\n        this.setState(({ data }) => (\n          {\n            data: data.deleteIn([this.state.lang, i])\n          }));\n      }\n    }\n    if (type === 'subTopic') {\n      this.setState(({ data }) => (\n        {\n          data: data.deleteIn([this.state.lang, i, 'content', e])\n        }));\n    }\n    if (type === 'question') {\n      this.setState(({ data }) => (\n        {\n          data: data.deleteIn([this.state.lang, i, 'content', e, 'content', a])\n        }));\n    }\n\n  }\n  handleChange(e, arr) {\n    if (arr[1] === \"topic\") {\n      if (arr[2] === 'name') {\n        this.setState(({ data }) => (\n          {\n            data: data.updateIn([this.state.lang, arr[0], 'nameTopic'], nameSubTopic => e)\n\n          }));\n      } else if (arr[2] === 'icon') {\n        this.setState(({ data }) => (\n          {\n            data: data.updateIn([this.state.lang, arr[0], 'icon'], nameSubTopic => e)\n\n          }));\n      }\n\n    }\n    else if (arr[1] === \"subtopic\") {\n      this.setState(({ data }) => (\n        {\n          data: data.updateIn([this.state.lang, arr[0], 'content', arr[2], 'nameSubTopic'], nameSubTopic => e)\n\n        }));\n    } else if (arr[2] === \"question\") {\n\n      this.setState(({ data }) => (\n        {\n          data: data.updateIn([this.state.lang, arr[0], 'content', arr[1], 'content', arr[3], 'question'], nameSubTopic => e)\n\n        }));\n    } else if (arr[2] === \"response\") {\n      this.setState(({ data }) => (\n        {\n          data: data.updateIn([this.state.lang, arr[0], 'content', arr[1], 'content', arr[3], 'response'], nameSubTopic => e)\n\n        }));\n    }\n  }\n  detecteChange (changeBool){\n    this.setState({ change: changeBool })\n  }\n  handleSubmit(e) {\n    this.postingData()\n  }\n  handleCancel() {\n    this.fetchingData()\n  }\n  componentWillMount(){\n      this.state.data.length === 0 ? this.fetchingData() : alert('Ereur lors de la récupération des données, veuillez contacter un administrateur !')\n\n  }\n  componentDidUpdate() {\n\n    if (!this.state.data.equals(this.state.dataOld)){\n      if (!this.state.change) { this.detecteChange(true) }\n    }else{\n      if (this.state.change) { this.detecteChange(false) }\n    }\n\n  }\n  initData(){\n    this.setState(({ data }) => (\n      {\n        data: data.updateIn([this.state.lang], arr => arr.push(Immutable.fromJS({ content: [], icon: '', idTopic: '', nameTopic: 'TopicName' })))\n      }\n    ))\n\n  }\n  render() {\n    return (\n\n      <div className=\"wrapperFAQ\">\n        <h1>Administration FAQ <a href=\"https://studio-new.phileasamundi.com/assets/course-v1:global+000+2019/\">Manage images</a></h1>\n        {!this.state.loading ? (\n            this.state.data.toJS()[this.state.lang].length === 0 ? (\n            <div>\n              <LangPicker selectLang={this.selectLang} lang={this.state.lang}/>\n              <div className={'noTopic'}> Vous n'avez aucun topic\n              <Button id='initTopicButton' color='primary' variant=\"contained\" onClick={() => {\n                this.initData()\n              }}>\n                {localizeApp[this.state.lang].createTopic}\n              </Button>\n              <div className=\"buttonWrapper\">\n                  {\n                      this.state.change === true &&\n                      <div>\n                        <Button className=\"submitJson buttonStylised\" style={{ color: '#fff' }} color=\"primary\" size=\"small\" variant=\"contained\" onClick={(e) => {\n                            this.handleSubmit(e)\n                        }} > {localizeApp[this.state.lang].submit}\n                      </Button>\n                        <div id=\"cancel\">\n                            <p className='buttonStylised warningChange'>{localizeApp[this.state.lang].onChange}</p>\n                            <Button className='buttonStylised' className=\"reinitJson\" style={{ color: '#fff' }} color=\"secondary\" size=\"small\" variant=\"contained\" onClick={(e) => {\n                                this.handleCancel(e)\n                            }} > {localizeApp[this.state.lang].cancel} </Button>\n\n                        </div>\n                      </div>\n                  }\n\n              </div>\n              </div>\n              </div>\n            ) : (\n                <div id='mainWrapper'>\n                <LangPicker selectLang={this.selectLang} lang={this.state.lang}/>\n                  <MenuTabTopics topics={this.state.data.toJS()[this.state.lang]} selectedTopic={this.state.selectedTopic} handleChangeTabTopic={this.handleChangeTabTopic} addField={this.addField} />\n                  <TabTopics lang={this.state.lang} change={this.state.change} handleSubmit={this.handleSubmit} handleCancel={this.handleCancel} topics={this.state.data.toJS()[this.state.lang]} selectedTopic={this.state.selectedTopic} removeField={this.removeField} handleChangeTabTopic={this.handleChangeTabTopic} handleChange={this.handleChange} addField={this.addField} >\n                    <SubTopics lang={this.state.lang} handleChange={this.handleChange} selectedTopic={this.state.selectedTopic} addField={this.addField} removeField={this.removeField}>\n                      <QAndA lang={this.state.lang} handleChange={this.handleChange} addField={this.addField} removeField={this.removeField} />\n                    </SubTopics>\n                  </TabTopics>\n\n                </div>\n              )\n         ) : (\n            <CircularProgress />\n          )\n         }\n      </div>\n    )\n  }\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { orange } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#5cb7d8',\n        },\n        secondary: orange,\n    },\n    background: \"#5cb7d8\"\n});\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n</ThemeProvider>\n\n, document.getElementById('root'));\n"],"sourceRoot":""}