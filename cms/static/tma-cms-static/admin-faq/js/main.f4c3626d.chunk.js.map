{"version":3,"sources":["components/MenuTabTopics.js","components/LangPicker.js","components/TopicHandlers.js","App.js","index.js"],"names":["MenuTabTopics","props","topics","onScreen","slice","map","topic","index","react_default","a","createElement","Tab","key","nameTopic","label","value","id","Tabs","selectedTopic","indicatorColor","onChange","handleChangeTabTopic","variant","length","Button","color","size","onClick","e","addField","Add_default","LangPicker","className","style","textAlign","padding","Select","lang","selectLang","MenuItem","handlingMutlipleLanguage","en","name","image","addSubTopic","nameSubTopic","addQuestion","question","answer","delete","submit","cancel","tinyMCELang","fr","TabTopics","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","handleClose","handleOpen","_React$createElement","Card","CardContent","CardActions","TextField","handleChange","target","icon","InputProps","endAdornment","InputAdornment","position","IconButton","edge","aria-label","Visibility_default","removeField","cloneElement","children","idx","handleSubmit","change","defineProperty","handleCancel","lib_default","axis","onChangeIndex","Modal","onClose","display","height","verticalAlign","src","alt","backgroundColor","Close_default","SubTopics","content","subTopic","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","ExpansionPanelDetails","SubTopicName","fullWidth","rows","data","ExpansionPanelActions","QAndA","ts","inline","init","language_url","window","tineMceFR","language","plugins","initialValue","response","level","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeSubtopic","panel","event","isExpanded","state","expanded","dataOld","loading","bind","assertThisInitialized","initData","fetchingData","postingData","_this2","fetch","siteID","credentials","method","then","json","dataFetched","setState","Immutable","fromJS","_this3","body","JSON","stringify","toJS","headers","Accept","Content-Type","X-CSRFToken","csrf","type","_this4","_ref","updateIn","arr","push","idTopic","_ref2","_ref3","namequestion","i","_this5","_ref4","deleteIn","_ref5","_ref6","_ref7","_this6","_ref8","_ref9","_ref10","_ref11","_ref12","changeBool","alert","equals","detecteChange","_this7","_ref13","_this8","href","CircularProgress","components_LangPicker","flexDirection","margin","components_MenuTabTopics","Component","theme","createMuiTheme","palette","primary","main","secondary","orange","background","ReactDOM","render","ThemeProvider","CssBaseline","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f4c3626d.chunk.js","sourcesContent":["import React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\n\nfunction MenuTabTopics(props) {\n  let topics = props.topics\n  topics = topics.slice(0, 4)\n  let onScreen = topics.map(\n    (topic, index) => {\n      return (\n        <Tab key={topic.nameTopic + index} label={topic.nameTopic} value={index} />\n      )\n    })\n  return (\n    <div id={'tabsWrapper'}>\n      <Tabs\n        id={'tabsElementWrapper'}\n        value={props.selectedTopic}\n        indicatorColor=\"primary\"\n        onChange={props.handleChangeTabTopic}\n        variant=\"fullWidth\"\n      >\n        {onScreen}\n\n      </Tabs>\n      {props.topics.length < 4 &&\n        <Button id=\"addTopicButton\" color=\"primary\" size=\"small\" variant=\"contained\" onClick={(e) => { props.addField('topic', e) }} > <AddIcon /> </Button>\n      }\n    </div>\n  )\n}\nexport default MenuTabTopics","import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nfunction LangPicker(props) {\n  return (\n\n    <div className=\"langPicker\" style={{textAlign: 'right',padding:' 10px 0px'}}>\n      <Select\n        value={props.lang}\n        onChange={props.selectLang}\n      >\n        <MenuItem value={'fr'}>Fr</MenuItem>\n        <MenuItem value={'en'}>En</MenuItem>\n      </Select>\n    </div>\n  )\n}\n\n\nexport default LangPicker\n","import React from 'react';\nimport tinymce from 'tinymce/tinymce';\nimport { Editor } from '@tinymce/tinymce-react';\nimport Modal from '@material-ui/core/Modal';\nimport Container from '@material-ui/core/Container';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility'\nimport CloseIcon from '@material-ui/icons/Close'\nimport SwipeableViews from 'react-swipeable-views';\nimport { Card, CardContent, CardActions } from '@material-ui/core';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport 'tinymce/skins/ui/oxide/skin.min.css'\nimport 'tinymce/skins/ui/oxide/content.min.css'\nimport 'tinymce/plugins/image'\nimport 'tinymce/plugins/link'\nimport 'tinymce/plugins/code'\nimport 'tinymce/themes/silver'\nimport 'tinymce/themes/silver'\n\n\nvar handlingMutlipleLanguage = {\n    en : {\n      name : \"name\",\n      image : \"Image\",\n      addSubTopic : 'Add a subtopic',\n      nameSubTopic : 'Subtopic name',\n      addQuestion : 'Add a question',\n      question : 'Question',\n      answer : 'Answer',\n      delete : 'Delete',\n      submit : 'Submit',\n      cancel : 'Cancel',\n      onChange : 'Unsaved changes',\n      tinyMCELang : '',\n    },\n    fr : {\n      name : \"Nom\",\n      image : \"Icône\",\n      addSubTopic : 'Ajouter un sous-topic',\n      nameSubTopic : 'Nom du sous-topic',\n      addQuestion : 'Ajouter une question',\n      question : 'Question',\n      answer : 'Réponse',\n      delete : 'Supprimer',\n      submit : 'Valider',\n      cancel : 'Annuler',\n      onChange : 'Des changements sont en cours',\n      tinyMCELang : 'fr_FR',\n    }\n}\n\nfunction TabTopics(props) {\n    const [open, setOpen] = React.useState(false);\n    let topics = props.topics\n    topics = topics.slice(0, 4)\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleOpen = () => {\n        setOpen(true);\n    };\n    let onScreen = topics.map(\n        (topic, index) => {\n            return (\n                <div className='tabTopic' key={topic + index}>\n                    <Card className='topicInput'>\n                        <CardContent>\n                            <center>\n                                <h4>\n                                    {topic.nameTopic}\n                                </h4>\n                            </center>\n                        </CardContent>\n                        <CardActions>\n                            <div className='TopicName'>\n                                <div className='inputTopicWrapper'>\n                                    <TextField className=\"inputTopic\" label={ handlingMutlipleLanguage[props.lang].name } onChange={(e) => { props.handleChange(e.target.value, [index, \"topic\", 'name']) }} value={topic.nameTopic}></TextField>\n                                    <TextField\n                                        className=\"inputTopic\"\n                                        label={handlingMutlipleLanguage[props.lang].image}\n                                        onChange={(e) => { props.handleChange(e.target.value, [index, \"topic\", 'icon']) }} value={topic.icon}\n                                        InputProps={{\n                                            endAdornment: (\n                                                <InputAdornment position=\"end\">\n                                                    <IconButton\n                                                        edge=\"end\"\n                                                        aria-label=\"Toggle Image\"\n                                                        onClick={handleOpen}>\n                                                        <Visibility size=\"small\" />\n                                                    </IconButton>\n                                                </InputAdornment>\n                                            ),\n                                        }}>\n                                    </TextField>\n                                </div>\n                                <div>\n                                    <Button className='buttonStylised' color='primary' style={{color:\"#fff\"}} variant=\"contained\" onClick={(e) => {\n                                        props.addField('subTopic', index)\n                                    }} size=\"small\">{handlingMutlipleLanguage[props.lang].addSubTopic} </Button>\n                                    <Button className='buttonStylised' color='secondary' style={{ color: \"#fff\" }} variant=\"contained\" onClick={(e) => {\n                                        props.removeField('topic', index)\n                                    }} size=\"small\">{handlingMutlipleLanguage[props.lang].delete}</Button>\n                                </div>\n                            </div>\n                        </CardActions>\n                    </Card>\n                    <div className='topicContent'>\n                        {React.cloneElement(props.children, { topics: topics[index], idx: index })}\n                    </div>\n                    <div className=\"buttonWrapper\">\n                        <Button className=\"submitJson buttonStylised\" style={{ color: '#fff' }} color=\"primary\" size=\"small\" variant=\"contained\" onClick={(e) => {\n                            props.handleSubmit(e)\n                        }} > {handlingMutlipleLanguage[props.lang].submit }</Button>\n                        {\n                            props.change === true &&\n                            <div id=\"cancel\">\n                                <p className='buttonStylised warningChange'>{handlingMutlipleLanguage[props.lang].onChange}</p>\n                                <Button className='buttonStylised' className=\"reinitJson\" style={{ color: '#fff' }} color=\"secondary\" size=\"small\" variant=\"contained\" onClick={(e) => {\n                                    props.handleCancel(e)\n                                }} > {handlingMutlipleLanguage[props.lang].cancel} </Button>\n                            </div>\n                        }\n                    </div>\n                </div>\n            )\n        })\n    return (\n        <SwipeableViews\n            axis={'x'}\n            index={props.selectedTopic}\n            onChangeIndex={props.handleChangeTabTopic}>\n            {onScreen}\n            <Modal open={open}\n                onClose={handleClose}\n                style={{ textAlign:\"center\",display: \"grid\" }}>\n                    <div>\n                    <span style={{ height: '100%', verticalAlign: \"middle\", display: \"inline-block\" }}></span>\n                    <img className='previewImg' src={props.topics[props.selectedTopic].icon} alt={props.topics[props.selectedTopic].icon} />\n                        <IconButton\n                        style={{ position: \"absolute\", backgroundColor:'#ff6d00'}}\n                            edge=\"end\"\n                            aria-label=\"Close Image\"\n                            onClick={handleClose}\n                        color=\"secondary\">\n                            <CloseIcon style={{color:\"white\"}} size=\"small\" />\n                        </IconButton>\n                    </div>\n            </Modal>\n        </SwipeableViews>\n    )\n}\n\nfunction SubTopics(props) {\n    let topics = props.topics\n    let onScreen = topics.content.map(\n        (subTopic, index) => {\n            return (\n                <ExpansionPanel key={index} >\n                    <ExpansionPanelSummary\n                        className='sousTopic'\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"\n                    >\n                        <h3>{subTopic.nameSubTopic}</h3>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className=\"subTopicFields\">\n                        <TextField label={handlingMutlipleLanguage[props.lang].SubTopicName} onChange={(e) => { props.handleChange(e.target.value, [props.idx, \"subtopic\", index]) }} fullWidth rows='12' value={subTopic.nameSubTopic}></TextField>\n                        {React.cloneElement(props.children, { data: subTopic.content, topic: props.idx, subTopic: index })}\n                    </ExpansionPanelDetails>\n                    <ExpansionPanelActions>\n                        <Button color='primary' onClick={(e) => {\n                            props.addField('question', props.idx, index)\n                        }} size=\"small\">{handlingMutlipleLanguage[props.lang].addQuestion} </Button>\n                        <Button color='secondary' onClick={(e) => {\n                            props.removeField('subTopic', props.idx, index)\n                        }} size=\"small\">{handlingMutlipleLanguage[props.lang].delete}</Button>\n                    </ExpansionPanelActions>\n\n                </ExpansionPanel>\n            )\n        })\n    return (\n        <div>\n            {onScreen}\n        </div>\n    )\n}\n\nfunction QAndA(props) {\n    let topics = props.data\n    let onScreen = topics.map(\n        (topic, index) => {\n            return (\n                <ExpansionPanel key={index} >\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"\n                    >\n                        <h4>{topic.question}</h4>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className=\"qAndAFields\">\n                        <TextField label=\"Question\" fullWidth rows='12' value={topic.question} onChange={(e) => { props.handleChange(e.target.value, [props.topic, props.subTopic, \"question\", index]) }}></TextField>\n                        <p>{handlingMutlipleLanguage[props.lang].answer}</p>\n                        <Editor inline className=\"tiny\" init={{  language_url : window.tineMceFR,language:handlingMutlipleLanguage[props.lang].tinyMCELang,  plugins: 'link image code' }} initialValue={topic.response} onChange={(e) => { props.handleChange(e.level.content, [props.topic, props.subTopic, \"response\", index]) }} />\n                    </ExpansionPanelDetails>\n                    <ExpansionPanelActions>\n                        <Button color='secondary' onClick={(e) => {\n                            props.removeField('question', props.topic, props.subTopic, index)\n                        }} size=\"small\">{handlingMutlipleLanguage[props.lang].delete}</Button>\n                    </ExpansionPanelActions>\n                </ExpansionPanel>\n            )\n        })\n    return (\n        <div className=\"qAndAWrappers\">\n            {onScreen}\n        </div>\n    )\n}\n\nexport { QAndA , TabTopics, SubTopics  }\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Immutable from 'immutable'\nimport './App.css';\nimport MenuTabTopics from './components/MenuTabTopics';\nimport LangPicker from './components/LangPicker';\nimport { TabTopics, SubTopics, QAndA } from './components/TopicHandlers';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lang: 'fr',\n      selectedTopic: 0,\n      expanded: false,\n      data: [],\n      dataOld:[],\n      change : false,\n      loading : true,\n    }\n    this.handleChangeTabTopic = this.handleChangeTabTopic.bind(this)\n    this.handleChangeSubtopic = this.handleChangeSubtopic.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleCancel = this.handleCancel.bind(this)\n    this.addField = this.addField.bind(this)\n    this.removeField = this.removeField.bind(this)\n    this.initData = this.initData.bind(this)\n    this.fetchingData = this.fetchingData.bind(this)\n    this.postingData = this.postingData.bind(this)\n    this.selectLang = this.selectLang.bind(this)\n  }\n  fetchingData(){\n    fetch('/tma_cms_apps/api/v1/microsite_manager/json/' + window.siteID.siteID + '/faq/',\n        {\n            credentials: \"same-origin\",\n            method: \"GET\",\n        }\n    )\n    .then(response => response.json())\n    .then((json) => {\n        var dataFetched = json\n        this.setState({ data: Immutable.fromJS(dataFetched),loading:false,dataOld: Immutable.fromJS(dataFetched)})\n      });\n  }\n  postingData(){\n    fetch('/tma_cms_apps/api/v1/microsite_manager/json/' + window.siteID.siteID + '/faq/',\n      {\n        credentials: \"same-origin\",\n        method: \"PUT\",\n        body: JSON.stringify(this.state.data.toJS()),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-CSRFToken': window.csrf\n        }\n      }\n    )\n      .then(response => response.json())\n      .then((json) => {\n        this.fetchingData()\n      });\n  }\n  selectLang(e){\n    this.setState({\n      lang: e.target.value,\n      selectedTopic : 0\n    })\n  }\n  handleChangeTabTopic(e, value) {\n    this.setState({\n      selectedTopic: value\n    })\n  }\n\n  handleChangeSubtopic = panel => (event, isExpanded) => {\n    if (isExpanded) {\n      return panel = true\n\n    } else {\n      return panel = false\n    }\n  }\n\n  addField(type, e, a) {\n    if (type === 'topic') {\n      this.setState(({ data }) => (\n        {\n          data: data.updateIn([this.state.lang], arr => arr.push(Immutable.fromJS({ content: [], icon: '', idTopic: '', nameTopic: 'TopicName' }))),\n        }));\n    }\n    if (type === 'subTopic') {\n      this.setState(({ data }) => (\n        {\n          data: data.updateIn([this.state.lang, e, 'content'], arr => arr.push(\n            Immutable.fromJS({ nameSubTopic: 'SubTopicName', content: [] })\n          ))\n        }));\n    }\n    if (type === 'question') {\n      this.setState(({ data }) => (\n        {\n          data: data.updateIn([this.state.lang, e, 'content', a, 'content'], arr => arr.push(\n            Immutable.fromJS({ namequestion: 'Question', question: 'Question', response: '' })))\n        }));\n    }\n  }\n  removeField(type, i, e, a) {\n\n    if (type === 'topic') {\n      if (this.state.selectedTopic > this.state.data.toJS()[this.state.lang].length - 2) {\n        this.setState(({ data }) => (\n          {\n            selectedTopic: i>0? i - 1 : 0,\n            data: data.deleteIn([this.state.lang, i])\n          }));\n      } else {\n        this.setState(({ data }) => (\n          {\n            data: data.deleteIn([this.state.lang, i])\n          }));\n      }\n    }\n    if (type === 'subTopic') {\n      this.setState(({ data }) => (\n        {\n          data: data.deleteIn([this.state.lang, i, 'content', e])\n        }));\n    }\n    if (type === 'question') {\n      this.setState(({ data }) => (\n        {\n          data: data.deleteIn([this.state.lang, i, 'content', e, 'content', a])\n        }));\n    }\n\n  }\n  handleChange(e, arr) {\n    if (arr[1] === \"topic\") {\n\n      if (arr[2] === 'name') {\n        this.setState(({ data }) => (\n          {\n            data: data.updateIn([this.state.lang, arr[0], 'nameTopic'], nameSubTopic => e)\n\n          }));\n      } else if (arr[2] === 'icon') {\n        this.setState(({ data }) => (\n          {\n            data: data.updateIn([this.state.lang, arr[0], 'icon'], nameSubTopic => e)\n\n          }));\n      }\n\n    }\n    else if (arr[1] === \"subtopic\") {\n      this.setState(({ data }) => (\n        {\n          data: data.updateIn([this.state.lang, arr[0], 'content', arr[2], 'nameSubTopic'], nameSubTopic => e)\n\n        }));\n    } else if (arr[2] === \"question\") {\n\n      this.setState(({ data }) => (\n        {\n          data: data.updateIn([this.state.lang, arr[0], 'content', arr[1], 'content', arr[3], 'question'], nameSubTopic => e)\n\n        }));\n    } else if (arr[2] === \"response\") {\n      this.setState(({ data }) => (\n        {\n          data: data.updateIn([this.state.lang, arr[0], 'content', arr[1], 'content', arr[3], 'response'], nameSubTopic => e)\n\n        }));\n    }\n  }\n  detecteChange (changeBool){\n    this.setState({ change: changeBool })\n  }\n  handleSubmit(e) {\n    this.postingData()\n  }\n  handleCancel() {\n    this.fetchingData()\n  }\n  componentWillMount(){\n      this.state.data.length === 0 ? this.fetchingData() : alert('Ereur lors de la récupération des données, veuillez contacter un administrateur !')\n\n  }\n  componentDidUpdate() {\n\n    if (!this.state.data.equals(this.state.dataOld)){\n      if (!this.state.change) { this.detecteChange(true) }\n    }else{\n      if (this.state.change) { this.detecteChange(false) }\n    }\n\n  }\n  initData(){\n    this.setState(({ data }) => (\n      {\n        data: data.updateIn([this.state.lang], arr => arr.push(Immutable.fromJS({ content: [], icon: '', idTopic: '', nameTopic: 'TopicName' })))\n      }\n    ))\n\n  }\n  render() {\n\n    return (\n\n      <div className=\"wrapperFAQ\">\n      <h1 id=\"mainTitle\">Administration FAQ <a href=\"/\">Manage Images</a></h1>\n        {!this.state.loading ? (\n            this.state.data.toJS()[this.state.lang].length === 0 ? (\n            <div>\n              <LangPicker selectLang={this.selectLang} lang={this.state.lang}/>\n              <div className={'noTopic'}>\n              <p>\n                Vous n'avez aucun topic\n              </p>\n              <Button id='initTopicButton' color='primary' variant=\"contained\" onClick={() => {\n                this.initData()\n              }}>\n              Créer un topic\n\n            </Button>\n            </div>\n            <div className=\"buttonWrapper\" style={{flexDirection:\"row\"}}>\n                {\n                    this.state.change === true &&\n                    <div>\n                        <Button className=\"submitJson buttonStylised\" style={{ color: '#fff',margin:'0!important' }} color=\"primary\" size=\"small\" variant=\"contained\" onClick={(e) => {\n                            this.handleSubmit(e)\n                        }} >\n                        Valider\n                          </Button>\n                        <div id=\"cancel\">\n                            <Button className='buttonStylised' className=\"reinitJson\" style={{ color: '#fff' }} color=\"secondary\" size=\"small\" variant=\"contained\" onClick={(e) => {\n                                this.handleCancel(e)\n                            }}>\n                                Annuler\n                            </Button>\n\n                        </div>\n                        <p className='buttonStylised warningChange'>\n                            Des Changements sont en cours\n                        </p>\n                    </div>\n\n                }\n\n            </div>\n              </div>\n            ) : (\n                <div id='mainWrapper'>\n                <LangPicker selectLang={this.selectLang} lang={this.state.lang}/>\n                  <MenuTabTopics topics={this.state.data.toJS()[this.state.lang]} selectedTopic={this.state.selectedTopic} handleChangeTabTopic={this.handleChangeTabTopic} addField={this.addField} />\n                  <TabTopics change={this.state.change} handleSubmit={this.handleSubmit} handleCancel={this.handleCancel} topics={this.state.data.toJS()[this.state.lang]} selectedTopic={this.state.selectedTopic} removeField={this.removeField} handleChangeTabTopic={this.handleChangeTabTopic} handleChange={this.handleChange} addField={this.addField} lang={this.state.lang} >\n                    <SubTopics handleChange={this.handleChange} selectedTopic={this.state.selectedTopic} addField={this.addField} removeField={this.removeField} lang={this.state.lang}>\n                      <QAndA handleChange={this.handleChange} addField={this.addField} removeField={this.removeField} lang={this.state.lang}/>\n                    </SubTopics>\n                  </TabTopics>\n\n                </div>\n              )\n         ) : (\n            <center><CircularProgress /></center>\n          )\n         }\n      </div>\n    )\n  }\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { orange } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#5cb7d8',\n        },\n        secondary: orange,\n    },\n    background: \"#5cb7d8\"\n});\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n</ThemeProvider>\n\n, document.getElementById('root'));\n"],"sourceRoot":""}