{"version":3,"sources":["store/reducers/userManagementReducer.js","store/reducers/quickSearchReducer.js","store/reducers/index.js","store/actions/types.js","assets/theme.js","components/navigation/TabPanel.jsx","containers/QuickSearch.jsx","components/user-management/CoursesListItem.jsx","store/actions/index.js","components/user-management/CoursesList.jsx","components/navigation/CustomTabs.jsx","components/user-management/Main.jsx","components/tables/DataTable.jsx","components/user-management/EnrollmentsView.jsx","components/user-management/DataRenderer.jsx","containers/UserManagement.jsx","App.js","index.js"],"names":["INITIAL_STATE","enrollments","courses","selectedEnrollments","displayGlobalMode","combineReducers","userManagement","state","action","type","payload","user_enrollments_profiles","org_courses","quickSearch","theme","createMuiTheme","palette","primary","main","window","props","colors","primary_color","background","clear","text","font","TabPanel","children","value","index","other","role","hidden","id","aria-labelledby","Grid","QuickSearch","container","direction","justify","alignItems","style","fontWeight","CoursesListItem","course","globalMode","useSelector","dispatch","useDispatch","isGlobal","useCallback","setDiplayMode","filterEnrollments","users","courseId","filteredUsersEnrollments","Object","entries","forEach","user","hasOwnProperty","filterUsersEnrollmentsByCourse","toggleIconColor","onClick","ListItem","ListItemText","display_name","backgroundColor","color","padding","borderRadius","marginRight","Divider","CoursesList","renderCoursesList","map","key","renderGlobalItem","CustomTabs","handleChangeTab","tabsList","renderTabs","tab","Tab","label","Tabs","indicatorColor","textColor","onChange","Main","item","xs","descendingComparator","a","b","orderBy","indexOf","aCopy","bCopy","EnhancedTableHead","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","useState","headCells","setHeadCells","useEffect","cells","numeric","disablePadding","sort","push","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","inputProps","headCell","align","sortDirection","TableSortLabel","active","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","root","paddingLeft","spacing","paddingRight","highlight","lighten","title","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","variant","component","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","DataTable","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","data","setData","fetchAllEnrollments","settings","method","headers","Accept","fetch","api_call","json","emptyRows","Math","min","keys","length","TableContainer","Table","size","aria-label","target","newSelecteds","values","userData","username","TableBody","array","comparator","stabilizedThis","el","stableSort","getComparator","slice","name","isItemSelected","labelId","hover","selectedIndex","newSelected","concat","handleClick","aria-checked","tabIndex","scope","is_active","last_name","first_name","email","enrollment_date","moment","format","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","EnrollmentsView","DataRenderer","setValue","newValue","scrollablePaper","maxHeight","UserManagement","Paper","fontFamily","paddingTop","minHeight","App","renderPanel","ThemeProvider","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd9375ef.chunk.js","sourcesContent":["import {\n  FETCH_USER_ENROLLMENTS,\n  FILTER_USERS_ENROLLMENTS_BY_COURSE,\n  SET_DISPLAY_MODE,\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  enrollments: {},\n  courses: {},\n  selectedEnrollments: {},\n  displayGlobalMode: true,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_USER_ENROLLMENTS:\n      return {\n        ...state,\n        enrollments: {\n          ...state.enrollments,\n          ...action.payload.user_enrollments_profiles,\n        },\n        courses: {\n          ...state.courses,\n          ...action.payload.org_courses,\n        }\n      };\n    case FILTER_USERS_ENROLLMENTS_BY_COURSE:\n      return {\n        ...state,\n        selectedEnrollments: {\n          ...action.payload,\n        },\n        displayGlobalMode: false\n      };\n    case SET_DISPLAY_MODE:\n      return {\n        ...state,\n        displayGlobalMode: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","const INITIAL_STATE = {};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};","import { combineReducers } from \"redux\";\nimport userManagement from \"./userManagementReducer\";\nimport quickSearch from \"./quickSearchReducer\";\n\nexport default combineReducers({\n  userManagement: userManagement,\n  quickSearch: quickSearch\n});","export const FETCH_USER_ENROLLMENTS = \"FETCH_USER_ENROLLMENTS\";\nexport const FILTER_USERS_ENROLLMENTS_BY_COURSE =\n  \"FILTER_USERS_ENROLLMENTS_BY_COURSE\";\nexport const SET_DISPLAY_MODE = \"SET_DISPLAY_MODE\";\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n    palette: {\n        primary: { main: window.props.colors.primary_color },\n        background: { main: \"#E5E5E5\", clear: \"#FFFFFF\" }\n    },\n    text: { font: { main: \"Montserrat\" } }\n})\n\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nconst TabPanel = ({ children, value, index, ...other }) => {\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Grid>{children}</Grid>}\n        </div>\n    );\n}\n\nexport default TabPanel;","import React from 'react'\nimport { Grid } from '@material-ui/core';\n\nconst QuickSearch = () => {\n    return (\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" style={{ fontWeight: 700 }}>\n            Available soon !\n        </Grid>\n    )\n}\n\nexport default QuickSearch;","import React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Divider, ListItem, ListItemText } from \"@material-ui/core\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport { setDiplayMode, filterUsersEnrollmentsByCourse } from \"../../store/actions\";\n\nconst CoursesListItem = ({ course, globalMode }) => {\n\n  const { enrollments } = useSelector(\n    (state) => ({\n      enrollments: state.userManagement.enrollments\n    })\n  );\n\n  const dispatch = useDispatch();\n\n  const isGlobal = useCallback(() => {\n    dispatch(setDiplayMode(globalMode));\n  }, [dispatch, globalMode]);\n\n  const filterEnrollments = useCallback(() => {\n    dispatch(filterUsersEnrollmentsByCourse(enrollments, course[0]))\n  }, [course, dispatch, enrollments])\n\n  const toggleIconColor = useCallback(() => {\n    if (!course) {\n      return \"black\";\n    }\n    return \"#2D9CDB\";\n  }, [course]);\n\n  return (\n    <div onClick={() => !globalMode ? filterEnrollments() : isGlobal()}>\n      <ListItem>\n        <ListItemText primary={course ? course[1].display_name : \"Global\"} />\n        <DescriptionIcon\n          style={{\n            backgroundColor: toggleIconColor(),\n            color: \"white\",\n            padding: 10,\n            borderRadius: \"10%\",\n            marginRight: 20,\n          }}\n        />\n      </ListItem>\n      <Divider />\n    </div>\n  );\n};\n\nexport default CoursesListItem;\n","import {\n  FETCH_USER_ENROLLMENTS,\n  FILTER_USERS_ENROLLMENTS_BY_COURSE,\n  SET_DISPLAY_MODE,\n} from \"./types\";\n\nexport const fetchEnrollments = () => async (dispatch) => {\n  let data = {}\n\n  if (process.env.NODE_ENV !== 'development') {\n    const url = \"/tma_apps/view_enrollments\"\n    const settings = {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const api_call = await fetch(url, settings);\n    data = await api_call.json()\n  } else {\n    data = window.props\n  }\n  dispatch({ type: FETCH_USER_ENROLLMENTS, payload: data });\n};\n\nexport const filterUsersEnrollmentsByCourse = (users, courseId) => {\n  let filteredUsersEnrollments = {};\n  if (courseId) {\n    Object.entries(users).forEach((user) => {\n      if (user[1].enrollments.hasOwnProperty(courseId)) {\n        if (!filteredUsersEnrollments.hasOwnProperty(user[0])) {\n          filteredUsersEnrollments[user[0]] = { ...user[1] };\n          filteredUsersEnrollments[user[0]].enrollments = {};\n        }\n\n        if (filteredUsersEnrollments.hasOwnProperty(user[0])) {\n          if (user[1].enrollments.hasOwnProperty(courseId)) {\n            filteredUsersEnrollments[user[0]].enrollments = {\n              ...filteredUsersEnrollments[user[0]].enrollments,\n              ...{ [courseId]: user[1].enrollments[courseId] },\n            };\n          }\n        }\n      }\n\n    });\n  }\n  return {\n    type: FILTER_USERS_ENROLLMENTS_BY_COURSE,\n    payload: filteredUsersEnrollments,\n  };\n};\n\nexport const setDiplayMode = (globalMode) => {\n  return { type: SET_DISPLAY_MODE, payload: globalMode };\n};\n","import React, { Fragment, useCallback } from \"react\";\nimport CoursesListItem from \"./CoursesListItem\";\n\nconst CoursesList = ({ courses }) => {\n  const renderCoursesList = useCallback(() => {\n    return Object.entries(courses).map((course) => {\n      return (\n        <CoursesListItem key={course[0]} course={course} globalMode={false} />\n      );\n    });\n  }, [courses]);\n\n  const renderGlobalItem = useCallback(() => {\n    return <CoursesListItem globalMode={true} />;\n  }, []);\n\n  return (\n    <Fragment>\n      {renderGlobalItem()}\n      {renderCoursesList()}\n    </Fragment>\n  );\n};\n\nexport default CoursesList;\n","import React, { useCallback } from 'react';\nimport { Tabs, Tab } from '@material-ui/core';\n\n\nconst CustomTabs = ({ value, handleChangeTab, tabsList }) => {\n    const renderTabs = useCallback(() => {\n        return tabsList.map((tab, index) => <Tab label={tab} key={index} />)\n    },\n        [tabsList],\n    )\n\n    return (\n        <Tabs value={value} indicatorColor=\"primary\" textColor=\"primary\" onChange={handleChangeTab}>\n            {renderTabs()}\n        </Tabs>\n    )\n}\n\nexport default CustomTabs;","import React, { Fragment } from 'react';\nimport { Grid, Divider } from '@material-ui/core';\n\nconst Main = () => {\n    return (\n        <Fragment>\n            <Grid item xs={12}>Course<Divider /></Grid>\n            <Grid container direction=\"row\">\n                <Grid item xs={6}>Overview<Divider /></Grid>\n                <Grid item xs={6}>Generate reports<Divider /></Grid>\n            </Grid>\n        </Fragment>\n    )\n}\n\nexport default Main;","import React, { useState, useEffect, useCallback, Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\nimport {\n  TableBody,\n  TableCell,\n  TableContainer,\n  Typography,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Checkbox,\n  Table,\n} from \"@material-ui/core/\";\nimport { fetchEnrollments } from \"../../store/actions\";\n\nconst descendingComparator = (a, b, orderBy) => {\n  //  to update\n  const regularComparators = ['is_active', 'last_name', 'username']\n  if (regularComparators.indexOf(orderBy) !== -1) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  } else {\n    // courses enrollments status are sorted by enrollment date\n    const aCopy = { ...a };\n    const bCopy = { ...b };\n    if (!aCopy[\"enrollments\"].hasOwnProperty(orderBy)) {\n      aCopy[\"enrollments\"][orderBy] = { \"enrollment_date\": \"\" }\n    }\n    if (!bCopy[\"enrollments\"].hasOwnProperty(orderBy)) {\n      bCopy[\"enrollments\"][orderBy] = { \"enrollment_date\": \"\" }\n    }\n    if (b[\"enrollments\"][orderBy]['enrollment_date'] < a[\"enrollments\"][orderBy]['enrollment_date']) {\n      return -1;\n    }\n    if (b[\"enrollments\"][orderBy]['enrollment_date'] > a[\"enrollments\"][orderBy]['enrollment_date']) {\n      return 1;\n    }\n  }\n\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nconst stableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n};\n\n\nconst EnhancedTableHead = ({\n  classes,\n  onSelectAllClick,\n  order,\n  orderBy,\n  numSelected,\n  rowCount,\n  onRequestSort,\n  courses\n}) => {\n\n  const [headCells, setHeadCells] = useState([]);\n\n  useEffect(() => {\n    const cells = [\n      {\n        id: \"is_active\",\n        numeric: false,\n        disablePadding: true,\n        label: \"User Status\",\n      },\n      { id: \"last_name\", numeric: false, disablePadding: false, label: \"Name\" },\n      { id: \"username\", numeric: false, disablePadding: false, label: \"Username\" }\n    ];\n\n    const sortedCourses = courses.sort()\n\n    sortedCourses.forEach(course => {\n      cells.push(\n        { id: course, numeric: false, disablePadding: false, label: course }\n      )\n    });\n\n    setHeadCells(cells)\n\n\n  }, [courses])\n\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select user\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight: {\n    color: theme.palette.primary.main,\n    backgroundColor: lighten(theme.palette.primary.main, 0.85),\n  },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = ({ numSelected }) => {\n  const classes = useToolbarStyles();\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n          <Typography\n            className={classes.title}\n            variant=\"h6\"\n            id=\"tableTitle\"\n            component=\"div\"\n          >\n            All enrollments\n        </Typography>\n        )}\n    </Toolbar>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst DataTable = () => {\n  const classes = useStyles();\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState(\"username\");\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  // Redux store setup\n  const { enrollments, selectedEnrollments, globalMode, courses } = useSelector(\n    (state) => ({\n      enrollments: state.userManagement.enrollments,\n      selectedEnrollments: state.userManagement.selectedEnrollments,\n      globalMode: state.userManagement.displayGlobalMode,\n      courses: state.userManagement.courses\n    })\n  );\n\n  const [data, setData] = useState(enrollments)\n\n  const dispatch = useDispatch();\n\n  const fetchAllEnrollments = useCallback(async () => {\n    await dispatch(fetchEnrollments());\n  }, [dispatch]);\n\n\n\n  useEffect(() => {\n    fetchAllEnrollments();\n  }, [fetchAllEnrollments]);\n\n  useEffect(() => {\n    !globalMode ? setData(selectedEnrollments) : setData(enrollments)\n  }, [selectedEnrollments, enrollments, globalMode])\n\n\n  // Data sorting\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  // Data selection\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = Object.values(data).map(\n        (userData) => userData.username\n      );\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, username) => {\n    const selectedIndex = selected.indexOf(username);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, username);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  // Mutliple page data display\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage -\n    Math.min(rowsPerPage, Object.keys(data).length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <EnhancedTableToolbar numSelected={selected.length} />\n      <TableContainer>\n        <Table\n          className={classes.table}\n          aria-labelledby=\"tableTitle\"\n          size=\"medium\"\n          aria-label=\"enhanced table\"\n        >\n          <EnhancedTableHead\n            classes={classes}\n            numSelected={selected.length}\n            order={order}\n            orderBy={orderBy}\n            onSelectAllClick={handleSelectAllClick}\n            onRequestSort={handleRequestSort}\n            rowCount={Object.keys(data).length}\n            courses={globalMode ? Object.keys(courses) : [\"Enrollment status\"]}\n          />\n          <TableBody>\n            {stableSort(\n              Object.values(data),\n              getComparator(order, orderBy)\n            )\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((userData, index) => {\n                const isItemSelected = isSelected(userData.username);\n                const labelId = `enhanced-table-checkbox-${index}`;\n\n                return (\n                  <TableRow\n                    hover\n                    onClick={(event) => handleClick(event, userData.username)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={userData.id}\n                    selected={isItemSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isItemSelected}\n                        inputProps={{ \"aria-labelledby\": labelId }}\n                      />\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                      {userData.is_active ? \"Active\" : \"Never connected\"}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <Typography variant=\"subtitle2\">\n                        {userData.last_name}\n                      </Typography>\n                      <Typography variant=\"caption\">\n                        {userData.first_name}\n                      </Typography>\n                    </TableCell>\n                    <TableCell align=\"left\" id={labelId}>\n                      <Typography variant=\"subtitle2\">\n                        {userData.username}\n                      </Typography>\n                      <Typography variant=\"caption\">\n                        {userData.email}\n                      </Typography>\n                    </TableCell>\n                    {Object.keys(courses).sort().map((course) => {\n                      return (\n                        <TableCell align=\"left\" key={course}>\n                          {userData.enrollments.hasOwnProperty(course) && userData.enrollments[course].enrollment_date\n                            ? <Fragment>\n                              <Typography variant=\"subtitle2\">Enrolled</Typography>\n                              <Typography variant=\"caption\">{moment(userData.enrollments[course].enrollment_date).format(\"MMM Do YY\")}</Typography>\n                              <RemoveCircleIcon />\n                              <MailOutlineIcon />\n                            </Fragment>\n                            : <Fragment>\n                              <Typography variant=\"subtitle2\">Not enrolled</Typography>\n                              <MailOutlineIcon />\n                              <SubdirectoryArrowRightIcon />\n                            </Fragment>}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 53 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={Object.keys(data).length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </div>\n  );\n};\n\nexport default DataTable;\n","import React, { Fragment } from \"react\";\nimport DataTable from \"../tables/DataTable\";\n\nconst EnrollmentsView = () => {\n  return (\n    <Fragment>\n      <DataTable />\n    </Fragment>\n  );\n};\n\nexport default EnrollmentsView;\n","import React, { Fragment, useCallback, useState } from 'react';\n// import {useSelector} from \"react-redux\";\nimport CustomTabs from '../navigation/CustomTabs';\nimport TabPanel from '../navigation/TabPanel';\nimport Main from './Main';\n// import Enroll from './Enroll';\nimport EnrollmentsView from './EnrollmentsView';\n\nconst DataRenderer = () => {\n    const [value, setValue] = useState(1);\n    const handleChangeTab = useCallback((event, newValue) => { setValue(newValue) }, [])\n\n    // const { globalMode } = useSelector(\n    //     (state) => ({globalMode: state.userManagement.displayGlobalMode,})\n    //   );\n\n    return (\n        <Fragment>\n            <CustomTabs value={value} handleChangeTab={handleChangeTab} tabsList={[\"Main\", \"View Enrollments\"]} />\n            <TabPanel value={value} index={0}>\n                <Main />\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <EnrollmentsView />\n            </TabPanel>\n        </Fragment>\n    )\n};\n\nexport default DataRenderer;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport CoursesList from \"../components/user-management/CoursesList\";\nimport DataRenderer from \"../components/user-management/DataRenderer\";\n\nconst useStyles = makeStyles(() => ({\n  scrollablePaper: {\n    margin: \"20px 10px\",\n    padding: \"10px\",\n    maxHeight: '80vh',\n    overflow: 'auto',\n    direction: 'rtl'\n  },\n  paper: {\n    margin: \"20px 10px\",\n    padding: \"10px\",\n  },\n}));\n\nconst UserManagement = () => {\n  const classes = useStyles();\n\n  const { courses } = useSelector(\n    (state) => ({\n      courses: state.userManagement.courses,\n    })\n  );\n\n  return (\n    <Grid container>\n      <Grid item xs={4}>\n        <Paper variant=\"outlined\" className={classes.scrollablePaper}>\n          <CoursesList courses={courses} />\n        </Paper>\n      </Grid>\n      <Grid item xs={8}>\n        <Paper variant=\"outlined\" className={classes.paper}>\n          <DataRenderer />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default UserManagement;\n","import React, { useState, useCallback, Fragment } from \"react\";\nimport { ThemeProvider, makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport { theme } from \"./assets/theme\";\nimport TabPanel from \"./components/navigation/TabPanel\";\nimport QuickSearch from \"./containers/QuickSearch\";\nimport UserManagement from \"./containers/UserManagement\";\nimport CustomTabs from \"./components/navigation/CustomTabs\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: theme.palette.background.main,\n    fontFamily: theme.text.font.main,\n    paddingTop: \"70px\",\n    minHeight: \"calc(100vh - 70px)\",\n    \"& .MuiTab-wrapper\": {\n      fontWeight: 700,\n    },\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState(1);\n\n  const handleChangeTab = useCallback((event, newValue) => {\n    setValue(newValue);\n  }, []);\n\n  const renderPanel = useCallback(() => {\n    return (\n      <Fragment>\n        <TabPanel value={value} index={0}>\n          <QuickSearch />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <UserManagement />\n        </TabPanel>\n      </Fragment>\n    );\n  }, [value]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid className={classes.root}>\n        <CustomTabs\n          value={value}\n          handleChangeTab={handleChangeTab}\n          tabsList={[\"Quick Search\", \"User Management\"]}\n        />\n        {renderPanel()}\n      </Grid>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./store/reducers\";\nimport App from \"./App\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducers,\n  {},\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}